@charset "UTF-8";
/* 定義 media query 樣式名稱*/
@import url(//fonts.googleapis.com/earlyaccess/notosanstc.css);
@keyframes fadeOutBubble {
  0% {
    opacity: 1;
    max-width: 200px;
    visibility: visible;
  }
  80% {
    opacity: 0;
    max-width: 200px;
  }
  100% {
    opacity: 0;
    max-width: 0;
    visibility: hidden;
  }
}

@keyframes fadeInBubble {
  0% {
    opacity: 0;
    max-width: 200px;
    visibility: hidden;
  }
  80% {
    opacity: 1;
    max-width: 200px;
    visibility: visible;
  }
  100% {
    opacity: 1;
    max-width: 200px;
    visibility: visible;
  }
}

@keyframes jumper {
  0% {
    opacity: 0;
    transform: scale(0);
  }
  5% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes zboing {
  0% {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    transform: scale3d(1.05, 0.95, 1);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video, input {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline;
  outline: 0;
  box-sizing: border-box;
}

ol, ul {
  list-style: none;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block;
}

audio, canvas, video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden] {
  display: none;
}

a:focus {
  outline: 0;
}

a:active, a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b, strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

hr {
  box-sizing: content-box;
  height: 0;
}

mark {
  background: #ff0;
  color: #000;
}

code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em;
}

pre {
  white-space: pre-wrap;
}

q {
  quotes: "“" "”" "‘" "’";
}

small {
  font-size: 80%;
}

sub {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  max-width: 100%;
  height: auto;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  outline: none;
  border-radius: 0;
  border: 1px solid #000;
}

button, input {
  line-height: normal;
}

button, select {
  text-transform: none;
}

button, html input[type="button"] {
  -webkit-appearance: button;
  cursor: pointer;
}

input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled], html input[disabled] {
  cursor: default;
}

input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

input[type="search"] {
  -webkit-appearance: textfield;
}

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
  vertical-align: top;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.clearfix {
  zoom: 1;
}

.clearfix:before {
  content: "";
  display: table;
}

.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

html {
  font-family: sans-serif;
  line-height: 1;
  font-size: 16px;
  height: 100%;
}

a {
  text-decoration: none;
  color: black;
}

html {
  font-size: 62.5%;
}

h1 {
  font-size: 3rem;
}

h2 {
  font-size: 2.6rem;
}

h3 {
  font-size: 2rem;
}

h4 {
  font-size: 1.8rem;
}

p {
  font-size: 1.6rem;
}

html, body {
  position: relative;
  margin: 0 auto;
  height: 100%;
  font-family: Arial,'Noto Sans TC','Microsoft JhengHei',Verdana,Arial,Helvetica,sans-serif,'Microsoft Yahei', 'Microsoft JhengHei','新細明體';
  background: #000;
}

a {
  cursor: pointer;
}

.fb-root {
  height: 0;
  overflow: hidden;
}

._freeze {
  position: fixed;
  width: 100%;
  height: 100%;
}

.l-container {
  margin: 0 auto;
  position: relative;
}

.l-wrap {
  width: 100%;
  position: relative;
}

.l-main {
  min-height: 100vh;
}

.l-footer {
  position: relative;
  text-align: center;
}

.container-area {
  width: 100%;
  max-width: 75vw;
  margin: 0 auto;
}

.hidden {
  display: none;
}

.hide-text {
  overflow: hidden;
  padding: 0;
  text-indent: 101%;
  white-space: nowrap;
}

p {
  color: #000;
  font-size: 20px;
}

.loading {
  display: block;
  background-color: black;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 9999;
  padding: 0 0 30px 0;
  overflow: hidden;
}

.loading .loadingbox {
  width: 15.625vw;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -60%);
}

.index {
  position: relative;
  width: 100%;
  min-height: 100vh;
}

.index .intro .introbox {
  background: url(../images/bg-line.png) center top/cover no-repeat;
  width: 45.26042vw;
  height: 33.48958vw;
  margin: 5.3125vw auto 0;
  padding: 5.57292vw 4.73958vw;
  text-align: center;
}

.index .intro .introbox .introarea {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.index .intro .introbox h2 {
  color: #fff;
}

.index .intro .introbox p {
  color: #fff;
  font-size: 0.9375vw;
  font-weight: 400;
  line-height: 1.8;
  text-align: justify;
  letter-spacing: 0.09375vw;
}

.index .intro .introbox .center {
  text-align: center;
}

.index .intro .introbox .block {
  margin: 3.125vw auto 0;
}

.index .intro .confirmbtn {
  background: url(../images/bg-input.png) center top/cover no-repeat;
  cursor: pointer;
  width: 25.3125vw;
  height: 3.22917vw;
  margin: 2.5vw auto 0;
  text-align: center;
  line-height: 3.22917vw;
  font-size: 1.25vw;
  color: #fff;
}

.index .step1 {
  background: url(../images/bg.png) center top/100% auto no-repeat;
  height: 56.25vw;
  padding: 35.9375vw 0 0 0;
}

.index .step1 .events {
  text-align: center;
}

.index .step1 .events .btn {
  background: url(../images/btn-confirm.png) center top/cover no-repeat;
  cursor: pointer;
  width: 8.38542vw;
  height: 6.71875vw;
  display: inline-block;
  margin: 0 auto;
}

.index .step1 .slogn {
  width: 54.79167vw;
  position: absolute;
  top: 15.625vw;
  left: 50%;
  transform: translateX(-50%);
}

.index .step1 .inputbox {
  background: url(../images/bg-input.png) center top/cover no-repeat;
  margin: 0 auto;
  width: 25.3125vw;
  height: 3.22917vw;
}

.index .step1 .inputbox input {
  border: 0;
  background: none;
  color: #fff;
  width: 100%;
  height: 3.125vw;
  text-align: center;
  font-size: 1.04167vw;
}

.index .step2 {
  position: relative;
}

.index .step2 .content {
  background: url(../images/bg-result-good.png) center top/cover no-repeat;
  width: 49.89583vw;
  height: 56.25vw;
  margin: 0 auto;
  position: relative;
}

.index .step2 .content .result {
  width: 15.15625vw;
  height: 2.5vw;
  text-align: center;
  font-size: 1.14583vw;
  position: absolute;
  top: 12.34375vw;
  left: 50%;
  transform: translateX(-45%);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.index .step2 .content .result .txt {
  font-size: 1.25vw;
  line-height: 1.25;
}

.index .step2 .content .identity {
  width: 14.94792vw;
  position: absolute;
  top: 23.02083vw;
  left: 50%;
  transform: translateX(-50%);
}

.index .step2 .content .group {
  font-size: 2.5vw;
  position: absolute;
  top: 30.20833vw;
  left: 21.35417vw;
}

.index .step2 .content .number {
  font-size: 2.5vw;
  position: absolute;
  top: 30.20833vw;
  left: 33.59375vw;
}

.index .step2 .content .btn {
  cursor: pointer;
  width: 16.14583vw;
  height: 3.90625vw;
  position: absolute;
  top: 44.27083vw;
  left: 50%;
  transform: translateX(-50%);
}

.index .step2 .badresult {
  background: url(../images/bg-result-bad.png) center top/cover no-repeat;
}

.popup {
  display: block;
  background-color: rgba(28, 28, 28, 0.95);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 9999;
  padding: 0 0 30px 0;
  overflow-x: hidden;
  overflow-y: auto;
}

.popup .content {
  background: url(../images/bg-line.png) center top/cover no-repeat;
  width: 45.26042vw;
  height: 33.48958vw;
  margin: 5.3125vw auto 0;
  padding: 3.48958vw 4.73958vw;
  text-align: center;
}

.popup .content h2 {
  color: #fff;
  margin: 0 0 2.08333vw 0;
}

.popup .content p {
  color: #fff;
  font-size: 0.9375vw;
  font-weight: 400;
  line-height: 1.8;
  text-align: justify;
  letter-spacing: 0.09375vw;
}

.popup .content .center {
  text-align: center;
}

.popup .content .block {
  margin: 3.125vw auto 0;
}

.popup .content li {
  color: #fff;
  font-size: 0.9375vw;
  line-height: 2;
  text-align: left;
}

.popup .content .desc {
  list-style: decimal;
}

.popup .content .nodesc {
  margin: 0 0 0 1em;
}

.popup .btn {
  background: url(../images/bg-input.png) center top/cover no-repeat;
  cursor: pointer;
  color: #fff;
  width: 25.3125vw;
  height: 3.22917vw;
  margin: 2.5vw auto 0;
  text-align: center;
  line-height: 3.22917vw;
  font-size: 1.04167vw;
}

[v-cloak] * {
  display: none;
}

.fade-enter-active, .fade-leave-active {
  transition: opacity .2s;
}

.fade-enter, .fade-leave-to {
  transition: .2s;
  opacity: 0;
}

.grecaptcha-badge {
  visibility: hidden;
}

.l-fb {
  visibility: hidden;
  display: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
