"use strict";var game_view=new Vue({el:"#app",data:{total:0,items:[{name:"晶透雪亮飲",score:10,img:"./images/prd-10.png",gtmData:"遊戲_晶透雪亮飲"},{name:"田七瑪卡王精華飲",score:20,img:"./images/prd-20.png",gtmData:"遊戲_田七瑪卡王精華飲"},{name:"人蔘蜆PLUS B群",score:30,img:"./images/prd-30.png",gtmData:"遊戲_人蔘蜆PLUS B群"},{name:"易得纖",score:40,img:"./images/prd-40.png",gtmData:"遊戲_易得纖"},{name:"孅益薑黃",score:50,img:"./images/prd-50.png",gtmData:"遊戲_孅益薑黃"},{name:"益菌王",score:60,img:"./images/prd-60.png",gtmData:"遊戲_益菌王"},{name:"優視金盞花葉黃素",score:70,img:"./images/prd-70.png",gtmData:"遊戲_優視金盞花葉黃素"},{name:"認證樟芝王",score:80,img:"./images/prd-80.png",gtmData:"遊戲_認證樟芝王"},{name:"認證靈芝王",score:90,img:"./images/prd-90.png",gtmData:"遊戲_認證靈芝王"},{name:"勇健王",score:100,img:"./images/prd-100.png",gtmData:"遊戲_勇健王"}],ranItem:[],showQ:[],resPic:"",agree:!1},methods:{cunScore:function(e){this.total+=Number(e.currentTarget.getAttribute("value")),e.currentTarget.removeAttribute("value"),e.currentTarget.classList.add("poactive")},timecun:function(){var e=this,t=20;var a=setInterval(function(){t-=1,$("#time").html(t+" 秒"),t<=0&&(clearInterval(a),e.gameRes())},1e3)},gameStart:function(){var e=this,t=$(".gamebody").width()-$(".gameshow").width();e.popup=!1,e.popPage="",e.gameStep="",setTimeout(function(){e.timecun(),$(".gamebody").css("transform","translateX(-"+t+"px)")},1e3)},gameRes:function(){var e=this;e.popup=!0,e.popPage="gamePop",e.gameStep="result",window.innerWidth<768?(0<=e.total&&(e.resPic="./images/mb-res60.png"),400<=e.total&&(e.resPic="./images/mb-res45.png"),600<=e.total&&(e.resPic="./images/mb-res30.png"),800<=e.total&&(e.resPic="./images/mb-res18.png")):(0<=e.total&&(e.resPic="./images/res60.png"),400<=e.total&&(e.resPic="./images/res45.png"),600<=e.total&&(e.resPic="./images/res30.png"),800<=e.total&&(e.resPic="./images/res18.png"))},playAgain:function(){window.location="./game.html"},toLottery:function(){var e=this;e.navfbshare(),e.getToken().then(function(){e.register().then(function(){e.getStatus().then(function(){e.playTicket(),""==e.fbData.fbPhone||null==e.fbData.fbPhone?e.fbshare().then(function(){e.gameStep="lottery"}):e.gameStep="success"})})})},sendPhone:function(){var t=this;if(!t.loading){t.loading=!0;if(""==t.user.phone||!t.user.phone.match(/^09[0-9]{8}$/))return alert("請輸入手機正確格式"),void(t.loading=!1);if(!t.agree)return alert("請勾選我已詳閱"),void(t.loading=!1);t.getToken().then(function(){t.savePhone().then(function(e){e.success?t.gameStep="success":alert(e.responseMessage),t.loading=!1})})}},scLottery:function(){this.navfbshare(),this.gameStep="success"},scPhone:function(){var e=this;if(!e.loading){e.loading=!0;if(""==e.user.phone||!e.user.phone.match(/^09[0-9]{8}$/))return alert("請輸入手機正確格式"),void(e.loading=!1);if(!e.agree)return alert("請勾選我已詳閱"),void(e.loading=!1);e.gameStep="success",e.loading=!1}}},created:function(){},mounted:function(){var e,t,a,n,s,i=this;i.popup=!0,i.popPage="gamePop",i.gameStep="start",$(".nav").hide();for(var r=0;r<18;r++)i.showQ.push(i.items[Math.floor(Math.random()*i.items.length)]);window.fbAsyncInit=function(){FB.init({appId:"431893260759072",status:!0,cookie:!0,xfbml:!1,version:"v3.2"})},e=document,t="script",a="facebook-jssdk",s=e.getElementsByTagName(t)[0],e.getElementById(a)||((n=e.createElement(t)).id=a,n.src="https://connect.facebook.net/en_US/sdk.js",s.parentNode.insertBefore(n,s))}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWUuanMiXSwibmFtZXMiOlsiZ2FtZV92aWV3IiwiVnVlIiwiZWwiLCJ0b3RhbCIsIml0ZW1zIiwibmFtZSIsInNjb3JlIiwiaW1nIiwiZ3RtRGF0YSIsInJhbkl0ZW0iLCJzaG93USIsInJlc1BpYyIsImN1blNjb3JlIiwibWV0aG9kcyIsImN1cnJlbnRUYXJnZXQiLCJjbGFzc0xpc3QiLCJ0aGlzIiwiTnVtYmVyIiwiZ2V0QXR0cmlidXRlIiwibXNlY3MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZWNzIiwiYWRkIiwidGltZWN1biIsInZtIiwiZGlmZiIsIlNUIiwic2V0SW50ZXJ2YWwiLCJnYW1lUmVzIiwiJCIsImh0bWwiLCJjbGVhckludGVydmFsIiwiZ2FtZVN0YXJ0IiwicG9wUGFnZSIsImdhbWVTdGVwIiwid2lkdGgiLCJzZXRUaW1lb3V0IiwiY3NzIiwiZW5kUCIsImlubmVyV2lkdGgiLCJwbGF5QWdhaW4iLCJsb2NhdGlvbiIsInRvTG90dGVyeSIsIm5hdmZic2hhcmUiLCJ0aGVuIiwiZ2V0VG9rZW4iLCJyZWdpc3RlciIsImZiRGF0YSIsImZiUGhvbmUiLCJmYnNoYXJlIiwic2VuZFBob25lIiwibG9hZGluZyIsInVzZXIiLCJwaG9uZSIsIm1hdGNoIiwibW9iaWxlX3J1bGUiLCJhZ3JlZSIsImFsZXJ0Iiwic2F2ZVBob25lIiwicmVzIiwic3VjY2VzcyIsInJlc3BvbnNlTWVzc2FnZSIsInNjTG90dGVyeSIsInNjUGhvbmUiLCJjcmVhdGVkIiwibW91bnRlZCIsImQiLCJzIiwiaWQiLCJqcyIsImZqcyIsImhpZGUiLCJpIiwicHVzaCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCIsIndpbmRvdyIsImZiQXN5bmNJbml0IiwiRkIiLCJpbml0IiwiYXBwSWQiLCJjb29raWUiLCJ4ZmJtbCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRFbGVtZW50QnlJZCIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJwYXJl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QUFBRCxLQUFBRSxTQUFBcEQsRUFBQXBCLE1BQUF5RSxVQUdBQyxPQUFBQyxZQUFBLFdBQ0FDLEdBQUFDLEtBQUEsQ0FRUUMsTUFBTyxrQkFQTFgsUUFBVixFQVNRWSxRQUFRLEVBUlBDLE9BQU8sRUFDSFgsUUFBUXJFLFVBaUJyQjhELEVBU0FtQixTQVRBbEIsRUFTQSxTQVRBQyxFQVNBLGlCQVJBRSxFQUFBSixFQUFBb0IscUJBQUFuQixHQUFBLEdBQ0FELEVBQUFxQixlQUFBbkIsTUFHQUMsRUFBQUgsRUFBQXNCLGNBQUFyQixJQUNBQyxHQUFBQSxFQUNBQyxFQUFBb0IsSUFBQSw0Q0FDQW5CLEVBQUFvQixXQUFBQyxhQUFBdEIsRUFBQUMiLCJmaWxlIjoiZ2FtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lX3ZpZXcgPSBuZXcgVnVlKHtcclxuICAgIGVsOiBcIiNhcHBcIixcclxuICAgIGRhdGE6IHtcclxuICAgICAgICAvLyBnYW1lOiB7fSxcclxuICAgICAgICB0b3RhbDogMCxcclxuICAgICAgICBpdGVtczogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuaZtumAj+mbquS6rumjslwiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDEwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC0xMC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+aZtumAj+mbquS6rumjslwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIueUsOS4g+eRquWNoeeOi+eyvuiPr+mjslwiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDIwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC0yMC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+eUsOS4g+eRquWNoeeOi+eyvuiPr+mjslwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuS6uuiUmOichlBMVVMgQue+pFwiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDMwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC0zMC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+S6uuiUmOichlBMVVMgQue+pFwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuaYk+W+l+e6llwiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDQwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC00MC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+aYk+W+l+e6llwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuWtheebiuiWkem7g1wiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDUwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC01MC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+WtheebiuiWkem7g1wiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuebiuiPjOeOi1wiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDYwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC02MC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+ebiuiPjOeOi1wiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuWEquimlumHkeebnuiKseiRiem7g+e0oFwiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDcwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC03MC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+WEquimlumHkeebnuiKseiRiem7g+e0oFwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuiqjeitieaon+iKneeOi1wiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDgwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC04MC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+iqjeitieaon+iKneeOi1wiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuiqjeitiemdiOiKneeOi1wiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDkwLFxyXG4gICAgICAgICAgICAgICAgaW1nOiBcIi4vaW1hZ2VzL3ByZC05MC5wbmdcIixcclxuICAgICAgICAgICAgICAgIGd0bURhdGE6IFwi6YGK5oiyX+iqjeitiemdiOiKneeOi1wiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIuWLh+WBpeeOi1wiLFxyXG4gICAgICAgICAgICAgICAgc2NvcmU6IDEwMCxcclxuICAgICAgICAgICAgICAgIGltZzogXCIuL2ltYWdlcy9wcmQtMTAwLnBuZ1wiLFxyXG4gICAgICAgICAgICAgICAgZ3RtRGF0YTogXCLpgYrmiLJf5YuH5YGl546LXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICByYW5JdGVtOiBbXSxcclxuICAgICAgICBzaG93UTogW10sXHJcbiAgICAgICAgcmVzUGljOiBcIlwiLFxyXG4gICAgICAgIGFncmVlOiBmYWxzZSxcclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgLy8gcmFuZG9tUTogZnVuY3Rpb24oKXtcclxuICAgICAgICAvLyAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAvLyAgICAgdm0ucmFuSXRlbSA9IHZtLml0ZW1zLnNvcnQoZnVuY3Rpb24oKXtcclxuICAgICAgICAvLyAgICAgICAgIHJldHVybiAwLjUgLSBNYXRoLnJhbmRvbSgpO1xyXG4gICAgICAgIC8vICAgICB9KVxyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgY3VuU2NvcmU6IGZ1bmN0aW9uKGVsKSB7XHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGVsLmN1cnJlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwidmFsdWVcIikpOyAvL+eVtuWJjeS6i+S7tueZvOeUn+WFg+e0oDsgZWwudGFyZ2V0PT3nlbbliY3pu57mk4rlhYPntKBcclxuICAgICAgICAgICAgLy8gdmFyIHBwID0gZWwudGFyZ2V0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicFwiKTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZWwudGFyZ2V0LmdldEF0dHJpYnV0ZShcInZhbHVlXCIpKTtcclxuICAgICAgICAgICAgdm0udG90YWwgKz0gTnVtYmVyKGVsLmN1cnJlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwidmFsdWVcIikpO1xyXG4gICAgICAgICAgICAvLyBwcC5zdHlsZS5vcGFjaXR5ID0gJzEnO1xyXG4gICAgICAgICAgICBlbC5jdXJyZW50VGFyZ2V0LnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpOyAvL+WPqum7nuS4gOasoeWKn+iDvVxyXG4gICAgICAgICAgICBlbC5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJwb2FjdGl2ZVwiKVxyXG4gICAgICAgICAgICAvLyBlbC5jdXJyZW50VGFyZ2V0LnN0eWxlLm9wYWNpdHkgPSAnMCc7XHJcbiAgICAgICAgICAgIC8vIGVsLmN1cnJlbnRUYXJnZXQuc3R5bGUudHJhbnNpdGlvbiA9ICcycyc7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0aW1lY3VuOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgdmFyIGRpZmYgID0gMjA7IC8vMjAwMDBcclxuICAgICAgICAgICAgdmFyIG1zZWNzO1xyXG4gICAgICAgICAgICB2YXIgc2VjcztcclxuICAgICAgICAgICAgZnVuY3Rpb24gc2hvd1RpbWVyKCkge1xyXG4gICAgICAgICAgICAgICAgZGlmZi09MTtcclxuICAgICAgICAgICAgICAgIC8vIG1zZWNzID0gTWF0aC5mbG9vciggZGlmZiAvIDEwICk7XHJcbiAgICAgICAgICAgICAgICAvLyBzZWNzID0gTWF0aC5mbG9vciggZGlmZiAvIDEwMDAgKTtcclxuICAgICAgICAgICAgICAgICQoJyN0aW1lJykuaHRtbChkaWZmKycg56eSJyk7XHJcbiAgICAgICAgICAgICAgICBpZihkaWZmIDw9IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKFNUKTtcclxuICAgICAgICAgICAgICAgICAgICB2bS5nYW1lUmVzKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIFNUID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtzaG93VGltZXIoKX0sIDEwMDApO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2FtZVN0YXJ0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgdmFyIGVuZFAgPSAkKFwiLmdhbWVib2R5XCIpLndpZHRoKCkgLSAkKFwiLmdhbWVzaG93XCIpLndpZHRoKCk7XHJcbiAgICAgICAgICAgIHZtLnBvcHVwID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHZtLnBvcFBhZ2UgPSBcIlwiO1xyXG4gICAgICAgICAgICB2bS5nYW1lU3RlcCA9IFwiXCI7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2bS50aW1lY3VuKCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmdhbWVib2R5XCIpLmNzcyhcclxuICAgICAgICAgICAgICAgICAgICBcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZVgoLVwiICsgZW5kUCArIFwicHgpXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gXCJ0cmFuc2l0aW9uXCIsIFwiM3NcIlxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfSwxMDAwKVxyXG4gICAgICAgICAgICAvLyBGQi5sb2dpbihmdW5jdGlvbihyZXMpe1xyXG4gICAgICAgICAgICAvLyAgICAgaWYgKHJlcy5zdGF0dXMgPT09ICdjb25uZWN0ZWQnKSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdm0uZmJEYXRhLnRva2VuID0gcmVzLmF1dGhSZXNwb25zZS5hY2Nlc3NUb2tlbjtcclxuICAgICAgICAgICAgLy8gICAgICAgICB2bS5mYkRhdGEuZmJfaWQgPSByZXMuYXV0aFJlc3BvbnNlLnVzZXJJRDtcclxuICAgICAgICAgICAgLy8gICAgICAgICB2bS5wb3B1cCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHZtLnBvcFBhZ2UgPSBcIlwiO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHZtLmdhbWVTdGVwID0gXCJcIjtcclxuICAgICAgICAgICAgLy8gICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICB2bS50aW1lY3VuKCk7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICQoXCIuZ2FtZWJvZHlcIikuY3NzKFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGVYKC1cIiArIGVuZFAgKyBcInB4KVwiLFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgLy8gXCJ0cmFuc2l0aW9uXCIsIFwiM3NcIlxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIH0sMTAwMClcclxuICAgICAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAgICAgLy8gfSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIGdhbWVSZXM6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgICAgICAgICB2bS5wb3B1cCA9IHRydWU7XHJcbiAgICAgICAgICAgIHZtLnBvcFBhZ2UgPSBcImdhbWVQb3BcIjtcclxuICAgICAgICAgICAgdm0uZ2FtZVN0ZXAgPSBcInJlc3VsdFwiO1xyXG4gICAgICAgICAgICBpZih3aW5kb3cuaW5uZXJXaWR0aCA8IDc2OCkge1xyXG4gICAgICAgICAgICAgICAgaWYodm0udG90YWwgPj0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZtLnJlc1BpYyA9IFwiLi9pbWFnZXMvbWItcmVzNjAucG5nXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih2bS50b3RhbCA+PSA0MDApIHtcclxuICAgICAgICAgICAgICAgICAgICB2bS5yZXNQaWMgPSBcIi4vaW1hZ2VzL21iLXJlczQ1LnBuZ1wiO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodm0udG90YWwgPj0gNjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0ucmVzUGljID0gXCIuL2ltYWdlcy9tYi1yZXMzMC5wbmdcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHZtLnRvdGFsID49IDgwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZtLnJlc1BpYyA9IFwiLi9pbWFnZXMvbWItcmVzMTgucG5nXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZih2bS50b3RhbCA+PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0ucmVzUGljID0gXCIuL2ltYWdlcy9yZXM2MC5wbmdcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHZtLnRvdGFsID49IDQwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZtLnJlc1BpYyA9IFwiLi9pbWFnZXMvcmVzNDUucG5nXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih2bS50b3RhbCA+PSA2MDApIHtcclxuICAgICAgICAgICAgICAgICAgICB2bS5yZXNQaWMgPSBcIi4vaW1hZ2VzL3JlczMwLnBuZ1wiO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodm0udG90YWwgPj0gODAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0ucmVzUGljID0gXCIuL2ltYWdlcy9yZXMxOC5wbmdcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcGxheUFnYWluKCkge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBcIi4vZ2FtZS5odG1sXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRvTG90dGVyeSgpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgdm0ubmF2ZmJzaGFyZSgpO1xyXG4gICAgICAgICAgICB2bS5nZXRUb2tlbigpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2bS5yZWdpc3RlcigpLnRoZW4oZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICB2bS5nZXRTdGF0dXMoKS50aGVuKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLnBsYXlUaWNrZXQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYodm0uZmJEYXRhLmZiUGhvbmUgPT0gXCJcIiB8fCB2bS5mYkRhdGEuZmJQaG9uZSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2bS5mYnNoYXJlKCkudGhlbihmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZtLmdhbWVTdGVwID0gXCJsb3R0ZXJ5XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdm0uZ2FtZVN0ZXAgPSBcInN1Y2Nlc3NcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAvLyB2bS5sb2FkaW5nID0gdHJ1ZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNlbmRQaG9uZSgpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgaWYoIXZtLmxvYWRpbmcpIHtcclxuICAgICAgICAgICAgICAgIHZtLmxvYWRpbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1vYmlsZV9ydWxlID0gL14wOVswLTldezh9JC87XHJcbiAgICAgICAgICAgICAgICBpZih2bS51c2VyLnBob25lID09XCJcIiB8fCAhdm0udXNlci5waG9uZS5tYXRjaChtb2JpbGVfcnVsZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbGVydChcIuiri+i8uOWFpeaJi+apn+ato+eiuuagvOW8j1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZighdm0uYWdyZWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbGVydChcIuiri+WLvumBuOaIkeW3suips+mWsVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2bS5nZXRUb2tlbigpLnRoZW4oZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICB2bS5zYXZlUGhvbmUoKS50aGVuKGZ1bmN0aW9uKHJlcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCFyZXMuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQocmVzLnJlc3BvbnNlTWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB2bS5mYnNoYXJlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2bS5nYW1lU3RlcCA9IFwic3VjY2Vzc1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzY0xvdHRlcnkoKSB7XHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgICAgIHZtLm5hdmZic2hhcmUoKTtcclxuICAgICAgICAgICAgdm0uZ2FtZVN0ZXAgPSBcInN1Y2Nlc3NcIjtcclxuICAgICAgICAgICAgLy8gaWYodm0uZmJEYXRhLmZiUGhvbmUgPT0gXCJcIiB8fCB2bS5mYkRhdGEuZmJQaG9uZSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIC8vICAgICB2bS5mYnNoYXJlKCkudGhlbihmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHZtLmdhbWVTdGVwID0gXCJsb3R0ZXJ5XCI7XHJcbiAgICAgICAgICAgIC8vICAgICB9KVxyXG4gICAgICAgICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyAgICAgdm0uZ2FtZVN0ZXAgPSBcInN1Y2Nlc3NcIjtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2NQaG9uZSgpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgaWYoIXZtLmxvYWRpbmcpIHtcclxuICAgICAgICAgICAgICAgIHZtLmxvYWRpbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1vYmlsZV9ydWxlID0gL14wOVswLTldezh9JC87XHJcbiAgICAgICAgICAgICAgICBpZih2bS51c2VyLnBob25lID09XCJcIiB8fCAhdm0udXNlci5waG9uZS5tYXRjaChtb2JpbGVfcnVsZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbGVydChcIuiri+i8uOWFpeaJi+apn+ato+eiuuagvOW8j1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZighdm0uYWdyZWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbGVydChcIuiri+WLvumBuOaIkeW3suips+mWsVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2bS5nYW1lU3RlcCA9IFwic3VjY2Vzc1wiO1xyXG4gICAgICAgICAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgfSxcclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgdm0ucG9wdXAgPSB0cnVlO1xyXG4gICAgICAgIHZtLnBvcFBhZ2UgPSBcImdhbWVQb3BcIjtcclxuICAgICAgICB2bS5nYW1lU3RlcCA9IFwic3RhcnRcIjsgLy9zdGFydCByZXN1bHQgbG90dGVyeSBzdWNjZXNzXHJcbiAgICAgICAgLy8gdm0ucmFuZG9tUSgpO1xyXG4gICAgICAgIC8vIHZtLkxvZ28gPSBcIi4vaW1hZ2VzL2xvZ28tZ2FtZS5wbmdcIjtcclxuICAgICAgICAkKFwiLm5hdlwiKS5oaWRlKCk7XHJcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IDE4OyBpKyspIHtcclxuICAgICAgICAgICAgdm0uc2hvd1EucHVzaCh2bS5pdGVtc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqdm0uaXRlbXMubGVuZ3RoKV0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHdpbmRvdy5mYkFzeW5jSW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgRkIuaW5pdCh7XHJcbiAgICAgICAgICAgICAgICBhcHBJZDogJzQzMTg5MzI2MDc1OTA3MicsXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6dHJ1ZSxcclxuICAgICAgICAgICAgICAgIGNvb2tpZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIHhmYm1sOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHZlcnNpb246ICd2My4yJ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8vIHZtLnRpbWVjdW4oKTtcclxuICAgICAgICAvL+ioreWumumBiuaIsuWvm+mrmFxyXG4gICAgICAgIC8vIHZhciBnYW1lSCA9ICQod2luZG93KS5oZWlnaHQoKSAtICQoJy5uYXYnKS5oZWlnaHQoKTtcclxuICAgICAgICAvLyB2YXIgY3VubiA9ICQoXCIuZ2FtZXNob3dcIikud2lkdGgoKSAvICQoXCIuZ2FtZXNob3dcIikuaGVpZ2h0KCk7XHJcbiAgICAgICAgLy8gJChcIi5nYW1lc2hvd1wiKS5jc3MoJ2hlaWdodCcsIGdhbWVIKTtcclxuICAgICAgICAvLyAkKFwiLmdhbWVzaG93XCIpLmNzcygnd2lkdGgnLCBnYW1lSCpjdW5uKTtcclxuICAgICAgICAvLyB2bS50aW1lY3VuKCk7XHJcbiAgICAgICAgLy/oqK3lrprpgYrmiLLnlavpnaLmnIDlj7PmlrnlrprkvY1cclxuICAgICAgICAvLyB2YXIgZW5kUCA9ICQoXCIuZ2FtZWJvZHlcIikud2lkdGgoKSAtICQoXCIuZ2FtZXNob3dcIikud2lkdGgoKTtcclxuICAgICAgICAvLyAkKFwiLmdhbWVib2R5XCIpLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgLy8gICAgICQoXCIuZ2FtZWJvZHlcIikuY3NzKFxyXG4gICAgICAgIC8vICAgICAgICAgXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGVYKC1cIiArIGVuZFAgKyBcInB4KVwiLFxyXG4gICAgICAgIC8vICAgICAgICAgLy8gXCJ0cmFuc2l0aW9uXCIsIFwiM3NcIlxyXG4gICAgICAgIC8vICAgICApO1xyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgICAgIChmdW5jdGlvbiAoZCwgcywgaWQpIHtcclxuICAgICAgICAgICAgdmFyIGpzLCBmanMgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdO1xyXG4gICAgICAgICAgICBpZiAoZC5nZXRFbGVtZW50QnlJZChpZCkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBqcyA9IGQuY3JlYXRlRWxlbWVudChzKTtcclxuICAgICAgICAgICAganMuaWQgPSBpZDtcclxuICAgICAgICAgICAganMuc3JjID0gXCJodHRwczovL2Nvbm5lY3QuZmFjZWJvb2submV0L2VuX1VTL3Nkay5qc1wiO1xyXG4gICAgICAgICAgICBmanMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoanMsIGZqcyk7XHJcbiAgICAgICAgfShkb2N1bWVudCwgJ3NjcmlwdCcsICdmYWNlYm9vay1qc3NkaycpKTtcclxuICAgIH1cclxufSlcclxuIl19
