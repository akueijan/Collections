"use strict";var backfill_view=new Vue({el:"#app",data:{type:"",fblogin:!1,userid:"",mobile:"",inv_num:"",awarditem:"",name:"",address:"",IdcardFrontShow:"",IdcardBackShow:"",BankbookShow:"",CertificatePhotoShow:"",IdcardFront:null,IdcardBack:null,Bankbook:null,CertificatePhoto:null,agree:!1,ploading:!0},watch:{IdcardFront:function(){""==!this.IdcardFrontShow&&($("#frontpre p").css("display","none"),$("#frontpre img").css("opacity","1"))},IdcardBack:function(){""==!this.IdcardBackShow&&($("#backpre p").css("display","none"),$("#backpre img").css("opacity","1"))},Bankbook:function(){""==!this.BankbookShow&&($("#bankpre p").css("display","none"),$("#bankpre img").css("opacity","1"))},CertificatePhoto:function(){""==!this.CertificatePhotoShow&&($("#certificatepre p").css("display","none"),$("#certificatepre img").css("opacity","1"))}},methods:{readfront:function(){var t=this;document.getElementById("front").addEventListener("change",function(){var e=new FileReader;e.readAsDataURL(this.files[0]),e.onload=function(e){t.IdcardFront=e.target.result}},!1)},readpoto:function(e){var t=this,n=e.target.files.item(0),o=e.target.id;console.log(e),console.log(e.target.id),console.log(n);var i=new FileReader;i.addEventListener("load",function(e){"front"==o&&(t.IdcardFrontShow=e.target.result,t.IdcardFront=n);"back"==o&&(t.IdcardBackShow=e.target.result,t.IdcardBack=n);"bank"==o&&(t.BankbookShow=e.target.result,t.Bankbook=n);"certificate"==o&&(t.CertificatePhotoShow=e.target.result,t.CertificatePhoto=n)}),i.readAsDataURL(n)},getUserid:function(){var n=this;return new Promise(function(e,t){n.userid=findGetParameter("user"),e()})},postback:function(){var t=this;if("FB"==t.type){if(!t.loading){if(t.loading=!0,!t.name)return alert("請填入收件人"),void(t.loading=!1);if(!t.address)return alert("請填入地址"),void(t.loading=!1);if(!t.fbData.fb_id)return alert("請先登入FB"),void(t.loading=!1);if(!t.agree)return alert("請勾選我已詳閱"),void(t.loading=!1);t.getToken().then(function(){t.grecaptcha("backfill").then(function(){t.postRecipientinfo().then(function(e){e.success?alert("資料已送出，感謝您的參與！"):alert("您並無資格領取此獎項。"),window.location.href="./index.html",t.loading=!1})})})}}else if(!t.loading){if(t.loading=!0,!t.name)return alert("請填入收件人"),void(t.loading=!1);if(!t.address)return alert("請填入地址"),void(t.loading=!1);if(!t.CertificatePhoto)return alert("請上傳發票正本電子檔"),void(t.loading=!1);if(!t.agree)return alert("請勾選我已詳閱"),void(t.loading=!1);t.getToken().then(function(){t.grecaptcha("backfill").then(function(){t.postRecipientinfo().then(function(e){e.success?(alert("資料已送出，感謝您的參與！"),window.location.href="./index.html"):alert(e.responseMessage),t.loading=!1})})})}},fbLogin:function(){var t=this;FB.login(function(e){"connected"===e.status&&(t.fbData.token=e.authResponse.accessToken,t.fbData.fb_id=e.authResponse.userID,FB.api("/me","GET",{fields:"id,name,picture"},function(e){console.log(e),t.fbData.fbName=e.name,t.fbData.fbPic="http://graph.facebook.com/"+e.id+"/picture?width=140&height=140",t.fblogin=!0}))})}},created:function(){var e=this;e.getUserid().then(function(){e.getToken().then(function(){e.getRecipientinfo()})})},mounted:function(){var e,t,n,o,i;$(".nav_events").click(function(){location.href="./index.html#events"}),window.fbAsyncInit=function(){FB.init({appId:"431893260759072",status:!0,cookie:!0,xfbml:!1,version:"v4.0"})},e=document,t="script",n="facebook-jssdk",i=e.getElementsByTagName(t)[0],e.getElementById(n)||((o=e.createElement(t)).id=n,o.src="https://connect.facebook.net/en_US/sdk.js",i.parentNode.insertBefore(o,i))}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
