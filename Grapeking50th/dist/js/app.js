"use strict";var production="false"===$("#appjs").data("mode"),friendo_url=$("#appjs").data("site"),device=deviceCheck();Vue.config.devtools=!production,Vue.config.debug=!production,Vue.config.silent=!production;var md=new MobileDetect(window.navigator.userAgent),tag=document.createElement("script");function findGetParameter(t){var o=null,a=[];return location.search.substr(1).split("&").forEach(function(e){(a=e.split("="))[0]===t&&(o=decodeURIComponent(a[1]))}),o}function checkCookie(t){var o=null,a=[];return document.cookie.split(";").forEach(function(e){" "==e.charAt(0)&&(e=e.substring(1)),(a=e.split("="))[0]===t&&(o=a[1])}),o}function deviceCheck(){var e={},t=new MobileDetect(window.navigator.userAgent);return t.match(/android/i)?(e.os="android",e.version=t.version("android")):t.match(/(iphone|ipad|ipod);?/i)?(e.os="ios",e.version=t.version("iOS")):(e.os="pc",e.version=t.version("Chrome")),e}$(function(){console.log("v1.0"),console.log(device),$(".nav").menu()}),Vue.mixin({data:function(){return{status:"",error_msg:"",loading:!1,popuptop:"",navHeight:"",rewardShake:!0,lineHref:"",gToken:"",Logo:"",fbData:{mb_id:"",token:"",fb_id:"",fbName:"",fbPic:"",fbPhone:""},user:{phone:""},play:{ticket:"",code:"",score:0},popup:!1,popPage:"",gameStep:"",awardList:"",reCaptcha:""}},computed:{openCome:function(){return!("Testing"==this.mode||start_date<=0)}},watch:{error_msg:function(e){$("body").toggleClass("_freeze")}},methods:{gaEvant:function(e){dataLayer.push({event:e}),console.log("ga:",e)},server_busy:function(){var e=this;e.error_msg="系統忙碌中，請稍後在試!",e.loading=!1,e.error_cou=6},setCookie:function(e,t,o){var a=new Date;a.setTime(a.getTime()+1e3*o);var n="expires="+a.toUTCString();document.cookie=e+"="+t+";"+n+";"},logger:function(e,t,o){if(production){_LTracker.push({level:["ERROR","DEBUG","WARNING","INFO","ALL"][e],content:JSON.stringify(t),path:window.location.href,tag:o||null,device:device,timestamp:Date.now()})}},errorDone:function(){this.error_msg=""},checkOnline:function(){navigator.onLine||alert("Internet 連線已斷開，請確認您的網路狀態。")},getToken:function(){var t=this;return $.ajax({url:"".concat(friendo_url,"auth/login?projectId=67"),headers:{WebToken:"u+Fw6wqP5Tgn+txlgClW+g=="},method:"GET",dataType:"json",success:function(e){t.gToken=e.token}})},state_check:function(){var t=this,e={mb_id:t.fbData.mb_id};return $.ajax({url:"".concat(friendo_url,"comebest2/getstatus"),headers:{Authorization:"Bearer "+t.gToken},data:e,method:"POST",dataType:"json",success:function(e){3==e.data.game_status?t.mode_status="timeover":1==e.data.game_status?(t.mode_status="comingsoon",t.start_date=e.data.start_date):t.mode_status="started"}})},getStatus:function(){var t=this,e={mb_id:t.fbData.mb_id};return $.ajax({url:"".concat(friendo_url,"comebest2/getstatus"),headers:{Authorization:"Bearer "+t.gToken},data:e,method:"POST",dataType:"json",success:function(e){t.fbData.fbName=e.data.name,t.fbData.fbPic=e.data.pic_url,t.fbData.fbPhone=e.data.phone}})},register:function(){var t=this,e={token:t.fbData.token,fb_id:t.fbData.fb_id};return $.ajax({url:"".concat(friendo_url,"comebest2/register"),headers:{Authorization:"Bearer "+t.gToken},data:e,method:"POST",dataType:"json",success:function(e){console.log("mb_id",e),t.fbData.mb_id=e.data}})},fbshare:function(){var e={mb_id:this.fbData.mb_id};return $.ajax({url:"".concat(friendo_url,"comebest2/fbshare"),headers:{Authorization:"Bearer "+this.gToken},data:e,method:"POST",dataType:"json",success:function(e){}})},savePhone:function(){var e={mb_id:this.fbData.mb_id,phone:this.user.phone};return $.ajax({url:"".concat(friendo_url,"comebest2/savephone"),headers:{Authorization:"Bearer "+this.gToken},data:e,method:"POST",dataType:"json",success:function(e){}})},playTicket:function(){var e={mb_id:this.fbData.mb_id,score:this.total};return $.ajax({url:"".concat(friendo_url,"comebest2/play"),headers:{Authorization:"Bearer "+this.gToken},data:e,method:"POST",dataType:"json",success:function(e){console.log("play",e)}})},record:function(){var e={mb_id:this.fbData.mb_id,ticket:this.play.ticket,score:this.play.score};return $.ajax({url:"".concat(friendo_url,"comebest2/record"),headers:{Authorization:"Bearer "+this.gToken},data:e,method:"POST",dataType:"json",success:function(e){}})},top100:function(){var e={mb_id:this.fbData.mb_id};return $.ajax({url:"".concat(friendo_url,"comebest2/top100"),headers:{Authorization:"Bearer "+this.gToken},data:e,method:"POST",dataType:"json",success:function(e){}})},invoiceSave:function(){var e=this,t={cell:e.mobile,inv_num:e.inv_num.toUpperCase(),random_number:e.inv_random,inv_date:e.inv_date,actToken:"Te8RvO6ZlEjaJJtTetH8Mg==",captcha:e.reCaptcha};return $.ajax({url:"".concat(friendo_url,"invoice/savedata"),headers:{Authorization:"Bearer "+e.gToken},data:t,method:"POST",dataType:"json"}).done(function(e){})},getaward:function(){return $.ajax({url:"".concat(friendo_url,"comebest2/LotteryResult/67"),headers:{Authorization:"Bearer "+this.gToken},method:"GET"}).done(function(e){console.log("getaward",e)})},grecaptcha:function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}(function(o){var a=this;return new Promise(function(t,e){grecaptcha.execute("6Ld54LMUAAAAAKnhc5FkZICJ4ioSlF7t5ofMg0Ng",{action:o}).then(function(e){a.reCaptcha=e,t()},function(){alert("Google驗證失敗，請再次嘗試\n如無法排除此問題，建議重新整理此頁面"),e()})})}),getRecipientinfo:function(){var t=this;return $.ajax({url:"".concat(friendo_url,"comebest2/recipientinfo/").concat(t.userid),headers:{Authorization:"Bearer "+t.gToken},method:"GET"}).done(function(e){e.success?(t.mobile=e.data.mobile,t.inv_num=e.data.referenceInfo,t.awarditem=e.data.awardName,t.type=e.data.referenceType):(alert("資料已回填或無法查獲此獎項"),window.location.href="./index.html"),t.ploading=!1})},postRecipientinfo:function(){var e=this,t=new FormData;return t.append("CampaignId",67),t.append("Code",e.userid),t.append("Name",e.name),t.append("Address",e.address),t.append("IdcardFront",e.IdcardFront),t.append("IdcardBack",e.IdcardBack),t.append("Bankbook",e.Bankbook),t.append("Certificate",e.CertificatePhoto),t.append("reCaptcha",e.reCaptcha),t.append("FBId",e.fbData.fb_id),$.ajax({url:"".concat(friendo_url,"comebest2/recipientinfo"),headers:{Authorization:"Bearer "+e.gToken},data:t,method:"POST",processData:!1,contentType:!1}).done(function(e){})},scrollTo:function(e){$("html,body").animate({scrollTop:$(e).offset().top},500)},popupOpen:function(){this.popuptop&&0!==this.popuptop||(this.popuptop=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop)),$("body").addClass("_freeze")},popupClose:function(){var e=this;e.popup=!1,e.popPage="",e.awardList="",$("body").removeClass("_freeze"),$("html, body").scrollTop(e.popuptop),e.popuptop=0},afterEnter:function(){this.popupOpen()},gotoPage:function(e){var t=window.location.pathname;t==e||"/"==t?(this.comingsoon=!1,this.comPage=""):window.location.href=e},navfbshare:function(){return window.open("https://www.facebook.com/sharer/sharer.php?u=https://campaign.friendo.com.tw/Grapeking50th/index.html&hashtag=%23葡萄王50陪您精彩向前"),!1}},components:{comingsoon:comingsoon},mounted:function(){}}),Vue.component("comingsoon",{template:"#comingsoon",props:["start_date","mode_status"],data:function(){return{comingsoon:!1,comPage:"",start_date:"",mode_status:"",date:{total:0,days:0,hours:0,minutes:0,seconds:0}}},mounted:function(){function r(e,t){return(e=""+e).length>=t?e:r("0"+e,t)}var i=this;i.mode_status="started",i.start_date="2019/10/02 17:00:00";var s=setInterval(function(){var e=Date.parse(new Date(i.start_date))-Date.parse(new Date),t=Math.floor(e/1e3%60),o=Math.floor(e/1e3/60%60),a=Math.floor(e/36e5%24),n=Math.floor(e/864e5);i.date={total:e,days:r(n,2),hours:r(a,2),minutes:r(o,2),seconds:r(t,2)},"started"==i.mode_status&&(clearInterval(s),i.comingsoon=!1,i.comPage=""),"timeover"==i.mode_status&&(clearInterval(s),i.comingsoon=!0,i.comPage="timeover"),"comingsoon"==i.mode_status&&(i.comingsoon=!0,i.comPage="comingsoon")},1e3)}}),Vue.component("hello-world",{template:"<p>hello world</p>"});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
