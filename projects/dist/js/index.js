"use strict";var index_view=new Vue({el:"#app",data:{scoreArr:[{name:"111",pic:"xxx"},{name:"222",pic:"xxx"},{name:"333",pic:"xxx"},{name:"444",pic:"xxx"},{name:"555",pic:"xxx"},{name:"666",pic:"xxx"},{name:"777",pic:"xxx"},{name:"888",pic:"xxx"},{name:"999",pic:"xxx"},{name:"101010",pic:"xxx"},{name:"111111",pic:"xxx"},{name:"121212",pic:"xxx"},{name:"131313",pic:"xxx"},{name:"141414",pic:"xxx"},{name:"151515",pic:"xxx"}],randomArr:[]},methods:{pushArr:function(){var e,t=this;if(t.randomArr=[],(e=t.scoreArr).length<=0)alert("沒有資料了");else for(var n=0;n<5;n++){var o=Math.floor(Math.random()*e.length);t.randomArr.push(t.shuffle(e)[o]),e.splice(o,1)}},shuffle:function(e){var t,n,o;for(t=e.length-1;0<t;t--)n=Math.floor(Math.random()*(t+1)),o=e[t],e[t]=e[n],e[n]=o;return e},kvAni:function(){var e=.3,t=new TimelineMax({delay:.3,repeat:-1});t.from(".kv",e,{opacity:0}),t.from(".hello",.6,{opacity:0}),t.from(".hello > .slogn",.6,{opacity:0,x:-50},"-=0.3"),t.to(".hello > .slogn",.6,{opacity:0,x:50},"+=3"),t.from(".whois",.6,{opacity:0}),t.from(".whois > .slogn",.6,{opacity:0}),t.from(".portfolio",.6,{opacity:0},"-=0.6"),t.to(".whois > .slogn",.6,{opacity:0},"+=3"),t.to(".portfolio",.6,{opacity:0},"-=0.6")},winScroll:function(){var t=document.getElementsByClassName("kv")[0].offsetHeight;window.onscroll=function(){var e=document.documentElement.scrollTop||window.pageYOffset||document.body.scrollTop;t/2<e?(document.getElementsByClassName("nav")[0].style.background="#dddddd",document.getElementsByClassName("nav")[0].style.boxShadow="0 1px 5px rgba(0,0,0,0.3)"):(document.getElementsByClassName("nav")[0].style.background="none",document.getElementsByClassName("nav")[0].style.boxShadow="none")}},gamePlay:function(){var e,t=0,n=!1;e=Math.ceil(5*Math.random()),console.log(e);var o=setInterval(function(){n?(0<t&&(t--,document.getElementById("game").style.transform="translateY("+(100-t)+"%)"),0==t&&(n=!1)):(t<100&&(t++,document.getElementById("game").style.transform="translateY("+(100-t)+"%)"),100==t&&(n=!0))},e);document.getElementById("stopG").addEventListener("click",function(){clearInterval(o)})},gameCss:function(){var e=0,n=setInterval(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transform="translateY(0)",document.getElementById("game2").style.transition=e+"s",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-25%)",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-50%)",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-75%)",setTimeout(function(){e=Math.floor(6*Math.random())/10,document.getElementById("game2").style.transition=e+"s",document.getElementById("game2").style.transform="translateY(-100%)"},200)},150)},100)},50)},300);document.getElementById("stopG").addEventListener("click",function(){for(var e=setTimeout(";"),t=0;t<e;t++)clearTimeout(t);clearInterval(n)})}},mounted:function(){this.kvAni(),this.winScroll();var t=document.getElementById("canvas"),n=t.getContext("2d"),o=new Image;o.onload=function(){n.drawImage(o,0,0);var e=n.getImageData(0,0,t.width,t.height);console.log(e)},o.src="./images/aj93DUQ.jpg"}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
