"use strict";function asyncGeneratorStep(e,r,t,n,o,a,E){try{var i=e[a](E),m=i.value}catch(e){return void t(e)}i.done?r(m):Promise.resolve(m).then(n,o)}function _asyncToGenerator(i){return function(){var e=this,E=arguments;return new Promise(function(r,t){var n=i.apply(e,E);function o(e){asyncGeneratorStep(n,r,t,o,a,"next",e)}function a(e){asyncGeneratorStep(n,r,t,o,a,"throw",e)}o(void 0)})}}var index_view=new Vue({el:"#app",data:{},methods:{},mounted:function(){console.log("faceapi: ",faceapi.nets),function(){var o=document.querySelector("#inputVideo");Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri("/static/models"),faceapi.nets.faceLandmark68Net.loadFromUri("/static/models"),faceapi.nets.faceRecognitionNet.loadFromUri("/static/models"),faceapi.nets.faceExpressionNet.loadFromUri("/static/models")]).then(function(){navigator.getUserMedia({video:{}},function(e){return o.srcObject=e},function(e){return console.error(e)})});var a=!1;o.addEventListener("play",function(){d[0];var t=faceapi.createCanvasFromMedia(o);document.querySelector("#webcanvas").append(t);var n={width:o.width,height:o.height};faceapi.matchDimensions(t,n);(function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r(),e.abrupt("return",setInterval(r,t));case 2:case"end":return e.stop()}},e)}));return function(e,r){return t.apply(this,arguments)}})()(function(){return e.apply(this,arguments)},150);function e(){return(e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,faceapi.detectFaceLandmarks(o);case 2:return e.sent,e.next=5,faceapi.detectAllFaces(o,new faceapi.TinyFaceDetectorOptions).withFaceLandmarks().withFaceExpressions();case 5:(r=e.sent)[0]?(console.log(r[0].expressions),0==a&&(a=!0,.6<r[0].expressions.sad&&(console.log("sad"),c(THREE.VRMSchema.BlendShapePresetName.Sorrow,THREE.VRMSchema.BlendShapePresetName.E,[0,.6,.9,1.2],[0,1,0,0]).then(function(){setTimeout(function(){a=!1},3e3)})))):(I=!0,0==a&&(a=!0,console.log("neutral"),s(THREE.VRMSchema.BlendShapePresetName.Blink,[0,.6,.9,1.2],[0,1,0,0]).then(function(){setTimeout(function(){a=!1},3e3)}))),r=faceapi.resizeResults(r,n),t.getContext("2d").clearRect(0,0,t.width,t.height),faceapi.draw.drawDetections(t,r),faceapi.draw.drawFaceLandmarks(t,r),faceapi.draw.drawFaceExpressions(t,r);case 12:case"end":return e.stop()}},e)}))).apply(this,arguments)}})}();var y={bgColor:"#212121",light:{x:-1,y:1,z:-1},eyes:"sorrow",eyesInt:0,mouth:"A",mouthInt:0,head:{x:0,y:0,z:0},chest:{x:0,y:0,z:0},leftUpperArm:{x:0,y:0,z:0},leftLowerArm:{x:0,y:0,z:0},leftHand:{x:0,y:0,z:0},leftUpperLeg:{x:0,y:0,z:0},leftLowerLeg:{x:0,y:0,z:0},rightUpperArm:{x:0,y:0,z:0},rightLowerArm:{x:0,y:0,z:0},rightHand:{x:0,y:0,z:0},rightUpperLeg:{x:0,y:0,z:0},rightLowerLeg:{x:0,y:0,z:0},actionName:{none:!1,walk:!1,run:!1,wave:!1},actionEyes:{fun:!1,angry:!1,joy:!1}},e=new dat.GUI;e.addColor(y,"bgColor");var r=e.addFolder("light");r.add(y.light,"x",-1,1),r.add(y.light,"y",-1,1),r.add(y.light,"z",-1,1),e.add(y,"eyesInt",0,10),e.add(y,"mouth",["A","E","I","O","U"]),e.add(y,"mouthInt",0,10);r=e.addFolder("head");r.add(y.head,"x",-2,2),r.add(y.head,"y",-2,2),r.add(y.head,"z",-2,2);r=e.addFolder("chest");r.add(y.chest,"x",-2,2),r.add(y.chest,"y",-2,2),r.add(y.chest,"z",-2,2);r=e.addFolder("leftUpperArm");r.add(y.leftUpperArm,"x",-1,1),r.add(y.leftUpperArm,"y",-2,1),r.add(y.leftUpperArm,"z",-1,1);r=e.addFolder("leftLowerArm");r.add(y.leftLowerArm,"x",-1,1),r.add(y.leftLowerArm,"y",-5,5),r.add(y.leftLowerArm,"z",-1,1);r=e.addFolder("leftHand");r.add(y.leftHand,"x",-1,1),r.add(y.leftHand,"y",-2,2),r.add(y.leftHand,"z",-1,1);r=e.addFolder("leftUpperLeg");r.add(y.leftUpperLeg,"x",-2,2),r.add(y.leftUpperLeg,"y",-5,5),r.add(y.leftUpperLeg,"z",-1,1);r=e.addFolder("leftLowerLeg");r.add(y.leftLowerLeg,"x",-2,2),r.add(y.leftLowerLeg,"y",-5,5),r.add(y.leftLowerLeg,"z",-1,1);r=e.addFolder("rightUpperArm");r.add(y.rightUpperArm,"x",-1,1),r.add(y.rightUpperArm,"y",-2,2),r.add(y.rightUpperArm,"z",-1,1);r=e.addFolder("rightLowerArm");r.add(y.rightLowerArm,"x",-1,1),r.add(y.rightLowerArm,"y",-5,5),r.add(y.rightLowerArm,"z",-1,1);r=e.addFolder("rightHand");r.add(y.rightHand,"x",-1,1),r.add(y.rightHand,"y",-2,2),r.add(y.rightHand,"z",-1,1);r=e.addFolder("rightUpperLeg");r.add(y.rightUpperLeg,"x",-2,2),r.add(y.rightUpperLeg,"y",-5,5),r.add(y.rightUpperLeg,"z",-1,1);r=e.addFolder("rightLowerLeg");r.add(y.rightLowerLeg,"x",-2,2),r.add(y.rightLowerLeg,"y",-5,5),r.add(y.rightLowerLeg,"z",-1,1);var t=void 0,n=void 0,r=e.addFolder("Actions");r.add(y.actionName,"none").name("none").listen().onChange(function(){if(E("none"),u)for(var e=0;e<u.length;e++)u[e].stop()}),r.add(y.actionName,"walk").name("walk").listen().onChange(function(){E("walk"),t={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-10*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,10*Math.PI/180,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-10*Math.PI/180,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,40*Math.PI/180,60*Math.PI/180)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,40*Math.PI/180,-60*Math.PI/180)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:1200}]}]},n=[THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg,THREE.VRMSchema.HumanoidBoneName.RightUpperLeg],H(d,t,n);for(var e=0;e<u.length;e++)u[e].play()}),r.add(y.actionName,"run").name("run").listen().onChange(function(){E("run");var e=450;t={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,-20*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,20*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,-20*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-60*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(40*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-60*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(.9,-90*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-90*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(.9,-90*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,90*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.9,90*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,90*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:900}]}]},n=[THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.RightLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg,THREE.VRMSchema.HumanoidBoneName.RightUpperLeg,THREE.VRMSchema.HumanoidBoneName.LeftLowerLeg,THREE.VRMSchema.HumanoidBoneName.RightLowerLeg],H(d,t,n);for(var r=0;r<u.length;r++)u[r].play()}),r.add(y.actionName,"wave").name("wave").listen().onChange(function(){E("wave");var e=600;t={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-10*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,10*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-10*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-2*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,2*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-2*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-10*Math.PI/180,1)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,10*Math.PI/180,1)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-10*Math.PI/180,1)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-2,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.5,-2,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-2,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-1,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-1,0,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-1)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-.9)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-1)).toArray(),time:1200}]}]},n=[THREE.VRMSchema.HumanoidBoneName.Head,THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftHand,THREE.VRMSchema.HumanoidBoneName.RightUpperArm],H(d,t,n);for(var r=0;r<u.length;r++)u[r].play()});var o,a=e.addFolder("Eyes");for(o in y.actionEyes)!function(e){a.add(y.actionEyes,e).name(e).listen().onChange(function(){E(e),"fun"===e&&s(d[0],THREE.VRMSchema.BlendShapePresetName.Fun),"angry"===e&&s(d[0],THREE.VRMSchema.BlendShapePresetName.Angry),"joy"===e&&s(d[0],THREE.VRMSchema.BlendShapePresetName.Joy),l.play(),R.play()})}(o);function E(e){for(var r in y.actionName)y.actionName[r]=!1;for(var t in y.actionEyes)y.actionEyes[t]=!1;y.actionName[e]=!0,y.actionEyes[e]=!0}var i=document.getElementById("canvas"),g=new THREE.Scene,f=new THREE.PerspectiveCamera(90,i.clientWidth/i.clientHeight,.1,1e3);f.position.set(0,1,-1);var M=new THREE.WebGLRenderer;M.setPixelRatio(window.devicePixelRatio),M.setSize(i.clientWidth,i.clientHeight),M.setClearColor(2171169,1),i.appendChild(M.domElement),console.log("render: ",M);e=new THREE.OrbitControls(f,M.domElement);e.screenSpacePanning=!0,e.target.set(0,1,0),e.update();var A=new THREE.DirectionalLight(16777215);A.position.set(-1,1,-1).normalize(),g.add(A);var m=new THREE.Object3D;f.add(m);e=new THREE.GLTFLoader;e.crossOrigin="anonymous";var d=[],L=void 0,u=void 0,P=void 0,l=void 0,h=void 0,R=void 0;e.load("./static/QMO_1.vrm",function(e){THREE.VRM.from(e).then(function(e){g.add(e.scene),console.log(e),d.push(e),e.lookAt.target=m;var r=[new THREE.IK,new THREE.IK];new THREE.IKChain,new THREE.IKChain,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftHand,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.RightLowerArm,THREE.VRMSchema.HumanoidBoneName.RightHand;w(e,r,[],[],[])})});e=new THREE.GridHelper(10,10);g.add(e);e=new THREE.AxesHelper(5);g.add(e);document.body;var F=new THREE.Clock,H=function(t,n,o){L=[];for(var a=[],e=0;e<t.length;e++)!function(r){var e=o.map(function(e){return t[r].humanoid.getBoneNode(e)}),e=THREE.AnimationClip.parseAnimation(n,e);e.tracks.some(function(e){e.name=e.name.replace(/^\.bones\[([^\]]+)\].(position|quaternion|scale)$/,"$1.$2")}),L.push(new THREE.AnimationMixer(t[r].scene)),a.push(L[r].clipAction(e)),console.log(a),u=a}(e)},s=function(n,o,a){return new Promise(function(e){var r=d[0],t=new THREE.NumberKeyframeTrack(r.blendShapeProxy.getBlendShapeTrackName(n),o,a);P=new THREE.AnimationMixer(r.scene);t=new THREE.AnimationClip("blink",1,[t]);(l=P.clipAction(t)).loop=THREE.LoopOnce,l.LoopOnce=!0,l.play(),e()})},c=function(t,n,o,a){var E=d[0];return new Promise(function(e){var r=new THREE.NumberKeyframeTrack(E.blendShapeProxy.getBlendShapeTrackName(t),o,a);P=new THREE.AnimationMixer(E.scene);r=new THREE.AnimationClip(t,1,[r]);(l=P.clipAction(r)).loop=THREE.LoopOnce,l.LoopOnce=!0,l.play();r=new THREE.NumberKeyframeTrack(E.blendShapeProxy.getBlendShapeTrackName(n),o,a);h=new THREE.AnimationMixer(E.scene);r=new THREE.AnimationClip(n,1,[r]);(R=h.clipAction(r)).loop=THREE.LoopOnce,R.LoopOnce=!0,R.play(),e()})},N=(new Date).getTime(),I=!1,w=function e(r,t,n,o,a){var E=F.getDelta(),i=(r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Head),r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Jaw),r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Neck),r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Chest)),m=(r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Hips),r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftEye),r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftLowerArm)),d=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftUpperArm),u=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftHand),l=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftLowerLeg),h=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg),R=(r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftFoot),r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightEye),r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightUpperArm)),H=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightLowerArm),s=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightHand),c=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightUpperLeg),w=r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightLowerLeg);r.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightFoot);i.rotation.x=y.chest.x,i.rotation.y=y.chest.y,i.rotation.z=y.chest.z,d.rotation.x=y.leftUpperArm.x,d.rotation.y=y.leftUpperArm.y,d.rotation.z=y.leftUpperArm.z,m.rotation.x=y.leftLowerArm.x,m.rotation.y=y.leftLowerArm.y,m.rotation.z=y.leftLowerArm.z,u.rotation.x=y.leftHand.x,u.rotation.y=y.leftHand.y,u.rotation.z=y.leftHand.z,h.rotation.x=y.leftUpperLeg.x,h.rotation.y=y.leftUpperLeg.y,h.rotation.z=y.leftUpperLeg.z,l.rotation.x=y.leftLowerLeg.x,l.rotation.y=y.leftLowerLeg.y,l.rotation.z=y.leftLowerLeg.z,R.rotation.x=y.rightUpperArm.x,R.rotation.y=-y.rightUpperArm.y,R.rotation.z=-y.rightUpperArm.z,H.rotation.x=y.rightLowerArm.x,H.rotation.y=-y.rightLowerArm.y,H.rotation.z=-y.rightLowerArm.z,s.rotation.x=y.rightHand.x,s.rotation.y=-y.rightHand.y,s.rotation.z=-y.rightHand.z,c.rotation.x=y.rightUpperLeg.x,c.rotation.y=y.rightUpperLeg.y,c.rotation.z=y.rightUpperLeg.z,w.rotation.x=y.rightLowerLeg.x,w.rotation.y=y.rightLowerLeg.y,w.rotation.z=y.rightLowerLeg.z;Math.PI,Math.sin(Math.PI*F.elapsedTime);I?r.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.I,Math.sin(Math.PI*F.elapsedTime)):r.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.I,0);var w=(new Date).getTime(),T=w-N;if(L)for(var p=0;p<L.length;p++)L[p].update(T);P&&P.update(E),N=w,r.update(E),requestAnimationFrame(function(){return e(r,t,n,o,a)}),M.setClearColor(y.bgColor,1),A.position.set(y.light.x,y.light.y,y.light.z).normalize(),M.render(g,f)},T=0,p=0;i.addEventListener("mousemove",function(e){m.position.x=(e.clientX-.5*i.offsetWidth)/i.offsetHeight*10,m.position.y=(e.clientY-.5*i.offsetHeight)/i.offsetHeight*-10,(T=.8<=T?.8:T)<=-.8&&(T=-.8),(p=.1<=p?.1:p)<=-.45&&(p=-.45)})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
