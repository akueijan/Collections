"use strict";function asyncGeneratorStep(e,t,r,o,n,a,E){try{var i=e[a](E),m=i.value}catch(e){return void r(e)}i.done?t(m):Promise.resolve(m).then(o,n)}function _asyncToGenerator(i){return function(){var e=this,E=arguments;return new Promise(function(t,r){var o=i.apply(e,E);function n(e){asyncGeneratorStep(o,t,r,n,a,"next",e)}function a(e){asyncGeneratorStep(o,t,r,n,a,"throw",e)}n(void 0)})}}var index_view=new Vue({el:"#app",data:{},methods:{},mounted:function(){console.log("faceapi: ",faceapi.nets);var p={bgColor:"#212121",light:{x:-1,y:1,z:-1},eyes:"sorrow",eyesInt:0,mouth:"A",mouthInt:0,head:{x:0,y:0,z:0},chest:{x:0,y:0,z:0},leftUpperArm:{x:0,y:0,z:0},leftLowerArm:{x:0,y:0,z:0},leftHand:{x:0,y:0,z:0},leftUpperLeg:{x:0,y:0,z:0},leftLowerLeg:{x:0,y:0,z:0},rightUpperArm:{x:0,y:0,z:0},rightLowerArm:{x:0,y:0,z:0},rightHand:{x:0,y:0,z:0},rightUpperLeg:{x:0,y:0,z:0},rightLowerLeg:{x:0,y:0,z:0},actionName:{none:!1,walk:!1,run:!1,wave:!1},actionEyes:{fun:!1,angry:!1,joy:!1}},e=new dat.GUI;e.addColor(p,"bgColor");var t=e.addFolder("light");t.add(p.light,"x",-1,1),t.add(p.light,"y",-1,1),t.add(p.light,"z",-1,1),e.add(p,"eyesInt",0,10),e.add(p,"mouth",["A","E","I","O","U"]),e.add(p,"mouthInt",0,10);t=e.addFolder("head");t.add(p.head,"x",-2,2),t.add(p.head,"y",-2,2),t.add(p.head,"z",-2,2);t=e.addFolder("chest");t.add(p.chest,"x",-2,2),t.add(p.chest,"y",-2,2),t.add(p.chest,"z",-2,2);t=e.addFolder("leftUpperArm");t.add(p.leftUpperArm,"x",-1,1),t.add(p.leftUpperArm,"y",-2,1),t.add(p.leftUpperArm,"z",-1,1);t=e.addFolder("leftLowerArm");t.add(p.leftLowerArm,"x",-1,1),t.add(p.leftLowerArm,"y",-5,5),t.add(p.leftLowerArm,"z",-1,1);t=e.addFolder("leftHand");t.add(p.leftHand,"x",-1,1),t.add(p.leftHand,"y",-2,2),t.add(p.leftHand,"z",-1,1);t=e.addFolder("leftUpperLeg");t.add(p.leftUpperLeg,"x",-2,2),t.add(p.leftUpperLeg,"y",-5,5),t.add(p.leftUpperLeg,"z",-1,1);t=e.addFolder("leftLowerLeg");t.add(p.leftLowerLeg,"x",-2,2),t.add(p.leftLowerLeg,"y",-5,5),t.add(p.leftLowerLeg,"z",-1,1);t=e.addFolder("rightUpperArm");t.add(p.rightUpperArm,"x",-1,1),t.add(p.rightUpperArm,"y",-2,2),t.add(p.rightUpperArm,"z",-1,1);t=e.addFolder("rightLowerArm");t.add(p.rightLowerArm,"x",-1,1),t.add(p.rightLowerArm,"y",-5,5),t.add(p.rightLowerArm,"z",-1,1);t=e.addFolder("rightHand");t.add(p.rightHand,"x",-1,1),t.add(p.rightHand,"y",-2,2),t.add(p.rightHand,"z",-1,1);t=e.addFolder("rightUpperLeg");t.add(p.rightUpperLeg,"x",-2,2),t.add(p.rightUpperLeg,"y",-5,5),t.add(p.rightUpperLeg,"z",-1,1);t=e.addFolder("rightLowerLeg");t.add(p.rightLowerLeg,"x",-2,2),t.add(p.rightLowerLeg,"y",-5,5),t.add(p.rightLowerLeg,"z",-1,1);var r=void 0,o=void 0,t=e.addFolder("Actions");t.add(p.actionName,"none").name("none").listen().onChange(function(){if(E("none"),u)for(var e=0;e<u.length;e++)u[e].stop()}),t.add(p.actionName,"walk").name("walk").listen().onChange(function(){E("walk"),r={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-10*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,10*Math.PI/180,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-10*Math.PI/180,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,40*Math.PI/180,60*Math.PI/180)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,40*Math.PI/180,-60*Math.PI/180)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:1200}]}]},o=[THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg,THREE.VRMSchema.HumanoidBoneName.RightUpperLeg],H(d,r,o);for(var e=0;e<u.length;e++)u[e].play()}),t.add(p.actionName,"run").name("run").listen().onChange(function(){E("run");var e=450;r={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,-20*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,20*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,-20*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-60*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(40*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-60*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(.9,-90*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-90*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(.9,-90*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,90*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.9,90*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,90*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:900}]}]},o=[THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.RightLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg,THREE.VRMSchema.HumanoidBoneName.RightUpperLeg,THREE.VRMSchema.HumanoidBoneName.LeftLowerLeg,THREE.VRMSchema.HumanoidBoneName.RightLowerLeg],H(d,r,o);for(var t=0;t<u.length;t++)u[t].play()}),t.add(p.actionName,"wave").name("wave").listen().onChange(function(){E("wave");var e=600;r={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-10*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,10*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-10*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-2*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,2*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-2*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-10*Math.PI/180,1)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,10*Math.PI/180,1)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-10*Math.PI/180,1)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-2,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.5,-2,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-2,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-1,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-1,0,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-1)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-.9)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-1)).toArray(),time:1200}]}]},o=[THREE.VRMSchema.HumanoidBoneName.Head,THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftHand,THREE.VRMSchema.HumanoidBoneName.RightUpperArm],H(d,r,o);for(var t=0;t<u.length;t++)u[t].play()});var n,a=e.addFolder("Eyes");for(n in p.actionEyes)!function(e){a.add(p.actionEyes,e).name(e).listen().onChange(function(){E(e),"fun"===e&&R(d[0],THREE.VRMSchema.BlendShapePresetName.Fun),"angry"===e&&R(d[0],THREE.VRMSchema.BlendShapePresetName.Angry),"joy"===e&&R(d[0],THREE.VRMSchema.BlendShapePresetName.Joy),h.play(),l.play()})}(n);function E(e){for(var t in p.actionName)p.actionName[t]=!1;for(var r in p.actionEyes)p.actionEyes[r]=!1;p.actionName[e]=!0,p.actionEyes[e]=!0}var i=document.getElementById("canvas"),c=new THREE.Scene,M=new THREE.PerspectiveCamera(90,i.clientWidth/i.clientHeight,.1,1e3);M.position.set(0,1,-1);var A=new THREE.WebGLRenderer;A.setPixelRatio(window.devicePixelRatio),A.setSize(i.clientWidth,i.clientHeight),A.setClearColor(2171169,1),i.appendChild(A.domElement),console.log("render: ",A);e=new THREE.OrbitControls(M,A.domElement);e.screenSpacePanning=!0,e.target.set(0,1,0),e.update();var L=new THREE.DirectionalLight(16777215);L.position.set(-1,1,-1).normalize(),c.add(L);var m=new THREE.Object3D;M.add(m);e=new THREE.GLTFLoader;e.crossOrigin="anonymous";var d=[],f=void 0,u=void 0,P=void 0,h=void 0,l=void 0;e.load("./static/QMO_1.vrm",function(e){THREE.VRM.from(e).then(function(e){c.add(e.scene),console.log(e),d.push(e),e.lookAt.target=m;var t=[new THREE.IK,new THREE.IK];new THREE.IKChain,new THREE.IKChain,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftHand,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.RightLowerArm,THREE.VRMSchema.HumanoidBoneName.RightHand;w(e,t,[],[],[])})});e=new THREE.GridHelper(10,10);c.add(e);e=new THREE.AxesHelper(5);c.add(e);document.body;var I=new THREE.Clock,H=function(r,o,n){f=[];for(var a=[],e=0;e<r.length;e++)!function(t){var e=n.map(function(e){return r[t].humanoid.getBoneNode(e)}),e=THREE.AnimationClip.parseAnimation(o,e);e.tracks.some(function(e){e.name=e.name.replace(/^\.bones\[([^\]]+)\].(position|quaternion|scale)$/,"$1.$2")}),f.push(new THREE.AnimationMixer(r[t].scene)),a.push(f[t].clipAction(e)),console.log(a),u=a}(e)},R=function(e,t){t=new THREE.NumberKeyframeTrack(e.blendShapeProxy.getBlendShapeTrackName(t),[0,.6,1.2],[0,1,0]);P=new THREE.AnimationMixer(e.scene);t=new THREE.AnimationClip("blink",1,[t]);h=P.clipAction(t)},N=(new Date).getTime(),w=function e(t,r,o,n,a){var E=I.getDelta(),i=(t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Head),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Jaw),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Neck),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Chest)),m=(t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Hips),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftEye),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftLowerArm)),d=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftUpperArm),u=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftHand),h=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftLowerLeg),l=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg),H=(t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftFoot),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightEye),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightUpperArm)),R=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightLowerArm),w=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightHand),T=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightUpperLeg),s=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightLowerLeg);t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightFoot);i.rotation.x=p.chest.x,i.rotation.y=p.chest.y,i.rotation.z=p.chest.z,d.rotation.x=p.leftUpperArm.x,d.rotation.y=p.leftUpperArm.y,d.rotation.z=p.leftUpperArm.z,m.rotation.x=p.leftLowerArm.x,m.rotation.y=p.leftLowerArm.y,m.rotation.z=p.leftLowerArm.z,u.rotation.x=p.leftHand.x,u.rotation.y=p.leftHand.y,u.rotation.z=p.leftHand.z,l.rotation.x=p.leftUpperLeg.x,l.rotation.y=p.leftUpperLeg.y,l.rotation.z=p.leftUpperLeg.z,h.rotation.x=p.leftLowerLeg.x,h.rotation.y=p.leftLowerLeg.y,h.rotation.z=p.leftLowerLeg.z,H.rotation.x=p.rightUpperArm.x,H.rotation.y=-p.rightUpperArm.y,H.rotation.z=-p.rightUpperArm.z,R.rotation.x=p.rightLowerArm.x,R.rotation.y=-p.rightLowerArm.y,R.rotation.z=-p.rightLowerArm.z,w.rotation.x=p.rightHand.x,w.rotation.y=-p.rightHand.y,w.rotation.z=-p.rightHand.z,T.rotation.x=p.rightUpperLeg.x,T.rotation.y=p.rightUpperLeg.y,T.rotation.z=p.rightUpperLeg.z,s.rotation.x=p.rightLowerLeg.x,s.rotation.y=p.rightLowerLeg.y,s.rotation.z=p.rightLowerLeg.z;Math.PI,Math.sin(Math.PI*I.elapsedTime);var s=(new Date).getTime(),y=s-N;if(f)for(var g=0;g<f.length;g++)f[g].update(y);P&&P.update(E),N=s,t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.Sorrow,p.mouthInt/10),"A"==p.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.A,p.mouthInt/10),"E"==p.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.E,p.mouthInt/10),"I"==p.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.I,p.mouthInt/10),"O"==p.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.O,p.mouthInt/10),"U"==p.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.U,p.mouthInt/10),t.update(E),requestAnimationFrame(function(){return e(t,r,o,n,a)}),A.setClearColor(p.bgColor,1),L.position.set(p.light.x,p.light.y,p.light.z).normalize(),A.render(c,M)},T=0,s=0;i.addEventListener("mousemove",function(e){T=(e.clientX-.5*i.offsetWidth)/i.offsetHeight*1,s=(e.clientY-.5*i.offsetHeight)/i.offsetHeight*-1,(T=.8<=T?.8:T)<=-.8&&(T=-.8),(s=.1<=s?.1:s)<=-.45&&(s=-.45)})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
