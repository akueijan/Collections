"use strict";function asyncGeneratorStep(e,t,r,o,a,n,E){try{var i=e[n](E),m=i.value}catch(e){return void r(e)}i.done?t(m):Promise.resolve(m).then(o,a)}function _asyncToGenerator(i){return function(){var e=this,E=arguments;return new Promise(function(t,r){var o=i.apply(e,E);function a(e){asyncGeneratorStep(o,t,r,a,n,"next",e)}function n(e){asyncGeneratorStep(o,t,r,a,n,"throw",e)}a(void 0)})}}var index_view=new Vue({el:"#app",data:{},methods:{},mounted:function(){console.log("faceapi: ",faceapi.nets);var g={bgColor:"#212121",light:{x:-1,y:1,z:-1},eyes:"sorrow",eyesInt:0,mouth:"A",mouthInt:0,head:{x:0,y:0,z:0},chest:{x:0,y:0,z:0},leftUpperArm:{x:0,y:0,z:0},leftLowerArm:{x:0,y:0,z:0},leftHand:{x:0,y:0,z:0},leftUpperLeg:{x:0,y:0,z:0},leftLowerLeg:{x:0,y:0,z:0},rightUpperArm:{x:0,y:0,z:0},rightLowerArm:{x:0,y:0,z:0},rightHand:{x:0,y:0,z:0},rightUpperLeg:{x:0,y:0,z:0},rightLowerLeg:{x:0,y:0,z:0},actionName:{none:!1,walk:!1,run:!1,wave:!1},actionEyes:{fun:!1,angry:!1,joy:!1,sorrow:!1}},e=new dat.GUI;e.addColor(g,"bgColor");var t=e.addFolder("light");t.add(g.light,"x",-1,1),t.add(g.light,"y",-1,1),t.add(g.light,"z",-1,1),e.add(g,"eyesInt",0,10),e.add(g,"mouth",["A","E","I","O","U"]),e.add(g,"mouthInt",0,10);t=e.addFolder("head");t.add(g.head,"x",-2,2),t.add(g.head,"y",-2,2),t.add(g.head,"z",-2,2);t=e.addFolder("chest");t.add(g.chest,"x",-2,2),t.add(g.chest,"y",-2,2),t.add(g.chest,"z",-2,2);t=e.addFolder("leftUpperArm");t.add(g.leftUpperArm,"x",-1,1),t.add(g.leftUpperArm,"y",-2,1),t.add(g.leftUpperArm,"z",-1,1);t=e.addFolder("leftLowerArm");t.add(g.leftLowerArm,"x",-1,1),t.add(g.leftLowerArm,"y",-5,5),t.add(g.leftLowerArm,"z",-1,1);t=e.addFolder("leftHand");t.add(g.leftHand,"x",-1,1),t.add(g.leftHand,"y",-2,2),t.add(g.leftHand,"z",-1,1);t=e.addFolder("leftUpperLeg");t.add(g.leftUpperLeg,"x",-2,2),t.add(g.leftUpperLeg,"y",-5,5),t.add(g.leftUpperLeg,"z",-1,1);t=e.addFolder("leftLowerLeg");t.add(g.leftLowerLeg,"x",-2,2),t.add(g.leftLowerLeg,"y",-5,5),t.add(g.leftLowerLeg,"z",-1,1);t=e.addFolder("rightUpperArm");t.add(g.rightUpperArm,"x",-1,1),t.add(g.rightUpperArm,"y",-2,2),t.add(g.rightUpperArm,"z",-1,1);t=e.addFolder("rightLowerArm");t.add(g.rightLowerArm,"x",-1,1),t.add(g.rightLowerArm,"y",-5,5),t.add(g.rightLowerArm,"z",-1,1);t=e.addFolder("rightHand");t.add(g.rightHand,"x",-1,1),t.add(g.rightHand,"y",-2,2),t.add(g.rightHand,"z",-1,1);t=e.addFolder("rightUpperLeg");t.add(g.rightUpperLeg,"x",-2,2),t.add(g.rightUpperLeg,"y",-5,5),t.add(g.rightUpperLeg,"z",-1,1);t=e.addFolder("rightLowerLeg");t.add(g.rightLowerLeg,"x",-2,2),t.add(g.rightLowerLeg,"y",-5,5),t.add(g.rightLowerLeg,"z",-1,1);var r=void 0,o=void 0,t=e.addFolder("Actions");t.add(g.actionName,"none").name("none").listen().onChange(function(){if(E("none"),u)for(var e=0;e<u.length;e++)u[e].stop()}),t.add(g.actionName,"walk").name("walk").listen().onChange(function(){E("walk"),r={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-10*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,10*Math.PI/180,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-10*Math.PI/180,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,40*Math.PI/180,60*Math.PI/180)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,40*Math.PI/180,-60*Math.PI/180)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-10*Math.PI/180,0,0)).toArray(),time:600},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(10*Math.PI/180,0,0)).toArray(),time:1200}]}]},o=[THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg,THREE.VRMSchema.HumanoidBoneName.RightUpperLeg],l(d,r,o);for(var e=0;e<u.length;e++)u[e].play()}),t.add(g.actionName,"run").name("run").listen().onChange(function(){E("run");var e=450;r={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,-20*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,20*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-30*Math.PI/180,-20*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-60*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(40*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-60*Math.PI/180,-40*Math.PI/180,60*Math.PI/180)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,-40*Math.PI/180,-60*Math.PI/180)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(.9,-90*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-90*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(.9,-90*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,90*Math.PI/180,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.9,90*Math.PI/180,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,90*Math.PI/180,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(60*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-40*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:900}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-90*Math.PI/180,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(20*Math.PI/180,0,0)).toArray(),time:900}]}]},o=[THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.RightLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg,THREE.VRMSchema.HumanoidBoneName.RightUpperLeg,THREE.VRMSchema.HumanoidBoneName.LeftLowerLeg,THREE.VRMSchema.HumanoidBoneName.RightLowerLeg],l(d,r,o);for(var t=0;t<u.length;t++)u[t].play()}),t.add(g.actionName,"wave").name("wave").listen().onChange(function(){E("wave");var e=600;r={hierarchy:[{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-10*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,10*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-10*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-2*Math.PI/180)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,2*Math.PI/180)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-2*Math.PI/180)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-10*Math.PI/180,1)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,10*Math.PI/180,1)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-10*Math.PI/180,1)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-2,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.5,-2,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(1,-2,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-1,0,0)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-.8,0,0)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(-1,0,0)).toArray(),time:1200}]},{keys:[{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-1)).toArray(),time:0},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-.9)).toArray(),time:e},{rot:(new THREE.Quaternion).setFromEuler(new THREE.Euler(0,0,-1)).toArray(),time:1200}]}]},o=[THREE.VRMSchema.HumanoidBoneName.Head,THREE.VRMSchema.HumanoidBoneName.Chest,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftHand,THREE.VRMSchema.HumanoidBoneName.RightUpperArm],l(d,r,o);for(var t=0;t<u.length;t++)u[t].play()});var a,n=e.addFolder("Eyes");for(a in g.actionEyes)!function(e){n.add(g.actionEyes,e).name(e).listen().onChange(function(){E(e),"fun"===e&&R(d,THREE.VRMSchema.BlendShapePresetName.A),"angry"===e&&R(d,THREE.VRMSchema.BlendShapePresetName.E),"joy"===e&&R(d,THREE.VRMSchema.BlendShapePresetName.O),"sorrow"===e&&R(d,THREE.VRMSchema.BlendShapePresetName.I),h.loop=THREE.LoopOnce,h.LoopOnce=!0,h.clampWhenFinished=!0,h.play()})}(a);function E(e){for(var t in g.actionName)g.actionName[t]=!1;for(var r in g.actionEyes)g.actionEyes[r]=!1;g.actionName[e]=!0,g.actionEyes[e]=!0}var i=document.getElementById("canvas"),M=new THREE.Scene,f=new THREE.PerspectiveCamera(90,i.clientWidth/i.clientHeight,.1,1e3);f.position.set(0,1,-1);var A=new THREE.WebGLRenderer;A.setPixelRatio(window.devicePixelRatio),A.setSize(i.clientWidth,i.clientHeight),A.setClearColor(2171169,1),i.appendChild(A.domElement),console.log("render: ",A);e=new THREE.OrbitControls(f,A.domElement);e.screenSpacePanning=!0,e.target.set(0,1,0),e.update();var L=new THREE.DirectionalLight(16777215);L.position.set(-1,1,-1).normalize(),M.add(L);var m=new THREE.Object3D;f.add(m);e=new THREE.GLTFLoader;e.crossOrigin="anonymous";var d=[],P=void 0,u=void 0,I=void 0,h=void 0;e.load("./static/QMO_facetest.vrm",function(e){THREE.VRM.from(e).then(function(e){M.add(e.scene),console.log(e),d.push(e),e.lookAt.target=m;var t=[new THREE.IK,new THREE.IK];new THREE.IKChain,new THREE.IKChain,THREE.VRMSchema.HumanoidBoneName.LeftUpperArm,THREE.VRMSchema.HumanoidBoneName.LeftLowerArm,THREE.VRMSchema.HumanoidBoneName.LeftHand,THREE.VRMSchema.HumanoidBoneName.RightUpperArm,THREE.VRMSchema.HumanoidBoneName.RightLowerArm,THREE.VRMSchema.HumanoidBoneName.RightHand;H(e,t,[],[],[])})});e=new THREE.GridHelper(10,10);M.add(e);e=new THREE.AxesHelper(5);M.add(e);document.body;var F=new THREE.Clock,l=function(r,o,a){P=[];for(var n=[],e=0;e<r.length;e++)!function(t){var e=a.map(function(e){return r[t].humanoid.getBoneNode(e)}),e=THREE.AnimationClip.parseAnimation(o,e);e.tracks.some(function(e){e.name=e.name.replace(/^\.bones\[([^\]]+)\].(position|quaternion|scale)$/,"$1.$2")}),P.push(new THREE.AnimationMixer(r[t].scene)),n.push(P[t].clipAction(e)),console.log(n),u=n}(e)},R=function(e,t){t=new THREE.NumberKeyframeTrack(e.blendShapeProxy.getBlendShapeTrackName(t),[0,.3,.6],[0,1,0]);I=new THREE.AnimationMixer(e.scene);t=new THREE.AnimationClip("blink",1,[t]);h=I.clipAction(t)},N=(new Date).getTime(),H=function e(t,r,o,a,n){var E=F.getDelta(),i=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Head),m=(t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Jaw),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Neck),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Chest)),d=(t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.Hips),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftEye),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftLowerArm)),u=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftUpperArm),h=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftHand),l=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftLowerLeg),R=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftUpperLeg),H=(t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.LeftFoot),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightEye),t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightUpperArm)),s=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightLowerArm),w=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightHand),c=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightUpperLeg),T=t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightLowerLeg);t.humanoid.getBoneNode(THREE.VRMSchema.HumanoidBoneName.RightFoot);i.rotation.x=g.head.x,i.rotation.y=g.head.y,i.rotation.z=g.head.z,m.rotation.x=g.chest.x,m.rotation.y=g.chest.y,m.rotation.z=g.chest.z,u.rotation.x=g.leftUpperArm.x,u.rotation.y=g.leftUpperArm.y,u.rotation.z=g.leftUpperArm.z,d.rotation.x=g.leftLowerArm.x,d.rotation.y=g.leftLowerArm.y,d.rotation.z=g.leftLowerArm.z,h.rotation.x=g.leftHand.x,h.rotation.y=g.leftHand.y,h.rotation.z=g.leftHand.z,R.rotation.x=g.leftUpperLeg.x,R.rotation.y=g.leftUpperLeg.y,R.rotation.z=g.leftUpperLeg.z,l.rotation.x=g.leftLowerLeg.x,l.rotation.y=g.leftLowerLeg.y,l.rotation.z=g.leftLowerLeg.z,H.rotation.x=g.rightUpperArm.x,H.rotation.y=-g.rightUpperArm.y,H.rotation.z=-g.rightUpperArm.z,s.rotation.x=g.rightLowerArm.x,s.rotation.y=-g.rightLowerArm.y,s.rotation.z=-g.rightLowerArm.z,w.rotation.x=g.rightHand.x,w.rotation.y=-g.rightHand.y,w.rotation.z=-g.rightHand.z,c.rotation.x=g.rightUpperLeg.x,c.rotation.y=g.rightUpperLeg.y,c.rotation.z=g.rightUpperLeg.z,T.rotation.x=g.rightLowerLeg.x,T.rotation.y=g.rightLowerLeg.y,T.rotation.z=g.rightLowerLeg.z;var T=(new Date).getTime(),p=T-N;if(P)for(var y=0;y<P.length;y++)P[y].update(p);I&&I.update(E),N=T,t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.Sorrow,g.mouthInt/10),"A"==g.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.A,g.mouthInt/10),"E"==g.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.E,g.mouthInt/10),"I"==g.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.I,g.mouthInt/10),"O"==g.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.O,g.mouthInt/10),"U"==g.mouth&&t.blendShapeProxy.setValue(THREE.VRMSchema.BlendShapePresetName.U,g.mouthInt/10),t.update(E),requestAnimationFrame(function(){return e(t,r,o,a,n)}),A.setClearColor(g.bgColor,1),L.position.set(g.light.x,g.light.y,g.light.z).normalize(),A.render(M,f)},s=0,w=0;i.addEventListener("mousemove",function(e){s=(e.clientX-.5*i.offsetWidth)/i.offsetHeight*1,w=(e.clientY-.5*i.offsetHeight)/i.offsetHeight*-1,(s=.8<=s?.8:s)<=-.8&&(s=-.8),(w=.1<=w?.1:w)<=-.45&&(w=-.45)})}});function videoRun(){var a=document.querySelector("#inputVideo");Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri("/static/models"),faceapi.nets.faceLandmark68Net.loadFromUri("/static/models"),faceapi.nets.faceRecognitionNet.loadFromUri("/static/models"),faceapi.nets.faceExpressionNet.loadFromUri("/static/models")]).then(function(){navigator.getUserMedia({video:{}},function(e){return a.srcObject=e},function(e){return console.error(e)})}),a.addEventListener("play",function(){var r=faceapi.createCanvasFromMedia(a);document.querySelector("#webcanvas").append(r);var o={width:a.width,height:a.height};faceapi.matchDimensions(r,o),setInterval(_asyncToGenerator(regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,faceapi.detectAllFaces(a,new faceapi.TinyFaceDetectorOptions).withFaceLandmarks().withFaceExpressions();case 2:(t=e.sent)[0]&&console.log(t),t=faceapi.resizeResults(t,o),r.getContext("2d").clearRect(0,0,r.width,r.height),faceapi.draw.drawDetections(r,t),faceapi.draw.drawFaceLandmarks(r,t),faceapi.draw.drawFaceExpressions(r,t);case 9:case"end":return e.stop()}},e)})),100)})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
