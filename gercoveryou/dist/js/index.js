"use strict";var index_view=new Vue({el:"#app",data:{awardOpen:!1,awardList:""},methods:{kvAni:function(){var o=new TimelineMax({delay:.6});o.from(".spotlight",1.2,{y:-1e3,opacity:0}),o.from(".slogn",.6,{y:50,opacity:0}),o.from(".actionbtn",.6,{y:50,opacity:0},"-=0.6"),o.from(".postarea",.6,{opacity:0}),o.set(".postbd",{scale:.6,top:-40,rotation:3},"+=0.3"),o.set(".postbd",{scale:.7,top:-30,rotation:-3},"+=0.3"),o.set(".postbd",{scale:.8,top:-20,rotation:3},"+=0.3"),o.set(".postbd",{scale:.9,top:-10,rotation:-3},"+=0.3"),o.set(".postbd",{scale:1,top:0,rotation:0}),o.from(".posthand",.6,{opacity:0},"+=0.3"),o.from(".kv .deco",.6,{opacity:0}),o.set(".posthand",{className:"+=posthand-active"}),o.set(".kv .more",{opacity:1,className:"+=more-active"}),o.set(".kv .deco1",{className:"+=deco-active"}),o.set(".kv .deco2",{className:"+=deco-active"},"+=0.1"),o.set(".kv .deco3",{className:"+=deco-active"},"+=0.1"),o.set(".kv .deco4",{className:"+=deco-active"},"+=0.1"),o.set(".kv .deco5",{className:"+=deco-active"},"+=0.1"),o.set(".kv .deco6",{className:"+=deco-active"},"+=0.1")},scrollShow:function(){this.isPc||$(window).scroll(function(){var o=0<$("html, body").scrollTop()?$("html, body").scrollTop():$(window).scrollTop();o>.5*$(".discount").offset().top?$(".gotop").addClass("gotop-active"):$(".gotop").removeClass("gotop-active"),o>$(".showvideo").offset().top&&$("#video1").get(0).play()})},awardFile:function(){var o=this,e=new XMLHttpRequest;e.open("GET","static/json/award.json"),e.responseType="json",e.send(),e.onload=function(){o.awardOpen=e.response.awardOpen,o.awardList=e.response.awardList}}},mounted:function(){var o=this;o.checkPage("index"),$("body").loadpage("init",{async:!1}),o.kvAni(),o.scrollShow(),o.awardFile();var e=new slickUse(".slickbd",0);e.Start(),e.videoPlay(),$("#showvideo .btn-prev").click(function(){e.Prev()}),$("#showvideo .btn-next").click(function(){e.Next()})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
