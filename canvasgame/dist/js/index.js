"use strict";var index_view=new Vue({el:"#app",data:{},methods:{canvasLoad:function(){var e=document.getElementById("loadcan").getContext("2d");e.font="30px Arial",e.globalCompositeOperation="source-over"},canvasBg:function(){var e=document.getElementById("loadcan"),n=e.getContext("2d"),t=document.getElementById("canvasbg");n.globalCompositeOperation="source-over",t.addEventListener("change",function(){n.fillStyle=t.value,n.fillRect(0,0,e.width,e.height)},!1)},canvasText:function(){var t=document.getElementById("loadcan"),a=t.getContext("2d"),i=document.getElementById("cantext");new Image;a.font="30px Arial",a.globalCompositeOperation="source-over",i.addEventListener("change",function(){a.save(),a.fillText(i.value,50,50)},!1),t.onmousedown=function(e){var n=e||event;!function(e,n){a.isPointInPath(e,n)&&(t.onmousemove=function(e){var n=e||event,t=n.clientX,o=n.clientY;a.clearRect(0,0,can.width,can.height),a.fillText(i.value,t,o)},can.onmouseup=function(){can.onmousemove=null,can.onmouseup=null})}(n.clientX,n.clientY)}},canvasImg:function(){var n,t,o,a,i=document.getElementById("loadcan"),c=i.getContext("2d"),e=document.getElementById("canImg"),l=new Image;e.addEventListener("change",function(e){var n=this.files;this.parentNode;Array.prototype.forEach.call(n,function(e){!function(e){var n=URL.createObjectURL(e);l.addEventListener("load",function(e){c.drawImage(l,0,0,l.width,l.height),c.beginPath(),c.stroke()}),l.src=n}(e)})}),i.onmousedown=function(e){i.onmousemove=function(e){o=e.clientX,a=e.clientY,n=o<i.width?0:i.width,t=a<i.height?0:i.height,o=o<i.width&&0<o?e.clientX:n,a=0<a&&a<i.height?e.clientY:t,c.clearRect(0,0,i.width,i.height),c.drawImage(l,(o-l.width)/2,(a-l.height)/2,l.width,l.height)},i.onmouseup=function(){i.onmousemove=null,i.onmouseup=null}}}},mounted:function(){var e=this;e.canvasBg(),e.canvasText(),e.canvasImg()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
