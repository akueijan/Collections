"use strict";var production="false"===$("#appjs").data("mode"),friendo_url=$("#appjs").data("site"),device=deviceCheck();Vue.config.devtools=!production,Vue.config.debug=!production,Vue.config.silent=!production;var md=new MobileDetect(window.navigator.userAgent),tag=document.createElement("script");function findGetParameter(e){var t=null,n=[];return location.search.substr(1).split("&").forEach(function(o){(n=o.split("="))[0]===e&&(t=decodeURIComponent(n[1]))}),t}function checkCookie(e){var t=null,n=[];return document.cookie.split(";").forEach(function(o){" "==o.charAt(0)&&(o=o.substring(1)),(n=o.split("="))[0]===e&&(t=n[1])}),t}function deviceCheck(){var o={},e=new MobileDetect(window.navigator.userAgent);return e.match(/android/i)?(o.os="android",o.version=e.version("android")):e.match(/(iphone|ipad|ipod);?/i)?(o.os="ios",o.version=e.version("iOS")):(o.os="pc",o.version=e.version("Chrome")),o}$(function(){console.log("v1.0"),console.log(device),$(".nav").menu()}),Vue.mixin({data:function(){return{status:"",start_date:"2100/08/09 12:09:10",error_msg:"",mode:production?"Started":"Testing",loading:!1,popuptop:"",navHeight:"",rewardShake:!0,lineHref:""}},computed:{openCome:function(){return!("Testing"==this.mode||start_date<=0)}},watch:{error_msg:function(o){$("body").toggleClass("_freeze")}},methods:{gaEvant:function(o){dataLayer.push({event:o}),console.log("ga:",o)},server_busy:function(){var o=this;o.error_msg="系統忙碌中，請稍後在試!",o.loading=!1,o.error_cou=6},setCookie:function(o,e,t){var n=new Date;n.setTime(n.getTime()+1e3*t);var r="expires="+n.toUTCString();document.cookie=o+"="+e+";"+r+";"},logger:function(o,e,t){if(production){_LTracker.push({level:["ERROR","DEBUG","WARNING","INFO","ALL"][o],content:JSON.stringify(e),path:window.location.href,tag:t||null,device:device,timestamp:Date.now()})}},errorDone:function(){this.error_msg=""},checkOnline:function(){navigator.onLine||alert("Internet 連線已斷開，請確認您的網路狀態。")},state_check:function(){var t=this;return $.ajax({method:"GET",url:"".concat(friendo_url,"GetProjectInfo"),success:function(o){var e=o.Data;t.start_date=e.StartDateTime,t.mode=e.Status}})},scrollTo:function(o){var e=this;e.room=null,e.allPopupClose(),$("html,body").animate({scrollTop:$(o).offset().top-e.navHeight},500)},popupOpen:function(){var o=this;o.popuptop&&0!==o.popuptop||(o.popuptop=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop)),$("body").addClass("_freeze")},popupClose:function(){$("body").removeClass("_freeze"),$("html, body").scrollTop(this.popuptop),this.popuptop=0},afterEnter:function(){this.popupOpen()},getToken:function(){return $.ajax({url:"".concat(friendo_url,"api/auth/login?projectId=61"),headers:{webtoken:"2YRiIGevkjZZ-S22iwwuSoajRcnZUSeEJ+dwslTtM+s="},method:"GET",dataType:"json"})}},components:{comingsoon:comingsoon},mounted:function(){var o=$(".window-top").height();this.navHeight=o-30,$("body").css("margin-top",this.navHeight),$(".nav-lock").click(function(){$("body").removeClass("_freeze")})}}),Vue.component("comingsoon",{template:"#comingsoon",props:["StartDate","mode"],data:function(){return{comingsoon:!1,date:{total:0,days:0,hours:0,minutes:0,seconds:0}}},mounted:function(){function i(o,e){return(o=""+o).length>=e?o:i("0"+o,e)}var a=this,s=setInterval(function(){var o=Date.parse(new Date(a.StartDate))-Date.parse(new Date),e=Math.floor(o/1e3%60),t=Math.floor(o/1e3/60%60),n=Math.floor(o/36e5%24),r=Math.floor(o/864e5);a.date={total:o,days:i(r,2),hours:i(n,2),minutes:i(t,2),seconds:i(e,2)},a.date.total<=0||"Testing"==a.mode?(clearInterval(s),a.comingsoon=!1):a.comingsoon=!0},1e3)}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwcm9kdWN0aW9uIiwiJCIsImRhdGEiLCJkZXZpY2UiLCJkZXZpY2VDaGVjayIsIlZ1ZSIsImNvbmZpZyIsImRlYnVnIiwic2lsZW50IiwibWQiLCJNb2JpbGVEZXRlY3QiLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJjb25zb2xlIiwibG9nIiwidG1wIiwicGFyYW1ldGVyTmFtZSIsInJlc3VsdCIsIml0ZW0iLCJsb2NhdGlvbiIsInNlYXJjaCIsInN1YnN0ciIsImNoZWNrQ29va2llIiwic3BsaXQiLCJkb2N1bWVudCIsImNvb2tpZSIsImZvckVhY2giLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJzdGFydF9kYXRlIiwidmVyc2lvbiIsIm9zIiwibWF0Y2giLCJmaW5kR2V0UGFyYW1ldGVyIiwibWVudSIsIm1vZGUiLCJsb2FkaW5nIiwicG9wdXB0b3AiLCJuYXZIZWlnaHQiLCJyZXdhcmRTaGFrZSIsImxpbmVIcmVmIiwiZXJyb3JfbXNnIiwib3BlbkNvbWUiLCJ0b2dnbGVDbGFzcyIsInRoaXMiLCJnYUV2YW50IiwiZGF0YUxheWVyIiwicHVzaCIsInZhbCIsImd0bURhdGEiLCJtZXRob2RzIiwic2VydmVyX2J1c3kiLCJldmVudCIsInZtIiwic2V0Q29va2llIiwic2V0VGltZSIsImVycm9yX2NvdSIsImNuYW1lIiwiY3ZhbHVlIiwidGltZSIsImQiLCJEYXRlIiwiZ2V0VGltZSIsInRhZyIsImNvbnRlbnQiLCJ0b1VUQ1N0cmluZyIsImV4cGlyZXMiLCJsb2dnZXIiLCJsZXZlbCIsIl9MVHJhY2tlciIsInN0cmluZ2lmeSIsIkpTT04iLCJwYXRoIiwibm93IiwiaHJlZiIsInRpbWVzdGFtcCIsImNoZWNrT25saW5lIiwib25MaW5lIiwiYWxlcnQiLCJ1cmwiLCJzdWNjZXNzIiwiYWpheCIsImZyaWVuZG9fdXJsIiwiU3RhdHVzIiwicmVzIiwiRGF0YSIsIlN0YXJ0RGF0ZVRpbWUiLCJzY3JvbGxUbyIsImUiLCJzY3JvbGxUb3AiLCJyb29tIiwiYWxsUG9wdXBDbG9zZSIsInBvcHVwT3BlbiIsImFuaW1hdGUiLCJvZmZzZXQiLCJ0b3AiLCJhZGRDbGFzcyIsIk1hdGgiLCJtYXgiLCJwYWdlWU9mZnNldCIsImRvY3VtZW50RWxlbWVudCIsImJvZHkiLCJwb3B1cENsb3NlIiwicmVtb3ZlQ2xhc3MiLCJhZnRlckVudGVyIiwiZ2V0VG9rZW4iLCJjb25jYXQiLCJoZWFkZXJzIiwid2VidG9rZW4iLCJtZXRob2QiLCJkYXRhVHlwZSIsImNvbXBvbmVudHMiLCJtb3VudGVkIiwiY29taW5nc29vbiIsImNsaWNrIiwiY29tcG9uZW50IiwiZGF0ZSIsInRvdGFsIiwiZGF5cyIsImhvdXJzIiwibWludXRlcyIsInNlY29uZHMiLCJwYWRMZWZ0Iiwic3RyIiwibGVuIiwiZmxvb3IiLCJ0IiwiU3RhcnREYXRlIiwicGFyc2UiLCJjbGVhckludGVydmFsIiwidGltZWludGVydmFsIl0sIm1hcHBpbmdzIjoiYUFBQSxJQUNJQSxXQUEwQyxVQUE3QkMsRUFBRSxVQUFVQyxLQUFLLFFBQTlCRixZQUFjQyxFQUFDLFVBQVVDLEtBQUssUUFHNUJDLE9BQVNDLGNBR2ZDLElBQUlDLE9BQU9DLFVBQVNQLFdBQ3BCSyxJQUFJQyxPQUFPRSxPQUFTUixXQUVwQkssSUFBSUksT0FBS0QsUUFBSUUsV0FJYlQsSUFBRVEsR0FBQSxJQUFBQyxhQUFZQyxPQUFBQyxVQUFBQyxXQUVWQyxJQUFRQyxTQUFJWixjQUFaLFVBYVEsU0FBSWEsaUJBQVdDLEdBTHZCLElBQUFDLEVBQUEsS0FRQUYsRUFBT0UsR0FVS0MsT0FUZkMsU0FBQUMsT0FSUUMsT0FBTyxHQVVQQyxNQUFBQSxLQUNETCxRQUFTLFNBQWJDLElBQ1VILEVBRFZHLEVBQUFLLE1BQUEsTUFFYUMsS0FBU0MsSUFDVFIsRUFDUlMsbUJBQXdCWCxFQUFBLE9BRWJFLEVBRVJGLFNBQUdPLFlBQWNOLEdBQ2pCLElBQUlELEVBQUEsS0FOWkEsRUFBQSxHQWNBLE9BTEFTLFNBQUFDLE9B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Q2ZOLEVBQVFLLEtBQU9BLE1BQUlDLEVBQUEsSUFBQSxHQUEzQixJQUNVUCxFQUFBdEIsS0FBQTRCLE1BQUFDLEVBQUEsS0FBQSxJQUNOUixFQURNckIsS0FBQTRCLE1BQUFDLEVBQUEsT0FFTnpFLEVBQUErRCxLQUFRTSxDQUNSTCxNQUFpQkUsRUFDakJELEtBQVdJLEVBQVFGLEVBSmIsR0FLTkQsTUFBV0csRUFBUUQsRUFBRCxHQUx0QkQsUUFBQUUsRUFBQUYsRUFBQSxHQUtJQyxRQUFXQyxFQUFRRCxFQUFTLElBRzVCUSxFQUFBQSxLQUFjQyxPQUFBQSxHQUFkLFdBQUE3RSxFQUFBbEIsTUFDRzhFLGNBQUhpQixHQUNHN0UsRUFBQTRELFlBQUEsR0FFTjVELEVBQUE0RCxZQUFBLEdBR1IiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3RcclxuICAgIHByb2R1Y3Rpb24gPSAkKFwiI2FwcGpzXCIpLmRhdGEoXCJtb2RlXCIpID09PSBcImZhbHNlXCIsXHJcbiAgICBmcmllbmRvX3VybCA9ICQoXCIjYXBwanNcIikuZGF0YShcInNpdGVcIik7XHJcblxyXG5jb25zdCBkZXZpY2UgPSBkZXZpY2VDaGVjaygpO1xyXG5cclxuVnVlLmNvbmZpZy5kZXZ0b29scyA9ICFwcm9kdWN0aW9uO1xyXG5WdWUuY29uZmlnLmRlYnVnID0gIXByb2R1Y3Rpb247XHJcblZ1ZS5jb25maWcuc2lsZW50ID0gIXByb2R1Y3Rpb247XHJcblxyXG52YXIgbWQgPSBuZXcgTW9iaWxlRGV0ZWN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTtcclxuXHJcbnZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coXCJ2MS4wXCIpO1xyXG4gICAgY29uc29sZS5sb2coZGV2aWNlKTtcclxuICAgICQoXCIubmF2XCIpLm1lbnUoKTtcclxufSk7XHJcblxyXG5cclxuZnVuY3Rpb24gZmluZEdldFBhcmFtZXRlcihwYXJhbWV0ZXJOYW1lKSB7XHJcbiAgICB2YXIgcmVzdWx0ID0gbnVsbCxcclxuICAgICAgICB0bXAgPSBbXTtcclxuICAgIGxvY2F0aW9uLnNlYXJjaFxyXG4gICAgICAgIC5zdWJzdHIoMSlcclxuICAgICAgICAuc3BsaXQoXCImXCIpXHJcbiAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcclxuICAgICAgICAgICAgdG1wID0gaXRlbS5zcGxpdChcIj1cIik7XHJcbiAgICAgICAgICAgIGlmICh0bXBbMF0gPT09IHBhcmFtZXRlck5hbWUpXHJcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBkZWNvZGVVUklDb21wb25lbnQodG1wWzFdKTtcclxuICAgICAgICB9KTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNoZWNrQ29va2llKHBhcmFtZXRlck5hbWUpIHtcclxuICAgIHZhciByZXN1bHQgPSBudWxsLFxyXG4gICAgICAgIHRtcCA9IFtdO1xyXG4gICAgdmFyIGNvb2tpZSA9IGRvY3VtZW50LmNvb2tpZTtcclxuICAgIGNvb2tpZS5zcGxpdChcIjtcIilcclxuICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICBpZiAoaXRlbS5jaGFyQXQoMCkgPT0gXCIgXCIpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0gPSBpdGVtLnN1YnN0cmluZygxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0bXAgPSBpdGVtLnNwbGl0KFwiPVwiKTtcclxuICAgICAgICAgICAgaWYgKHRtcFswXSA9PT0gcGFyYW1ldGVyTmFtZSlcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRtcFsxXTtcclxuICAgICAgICB9KVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG5mdW5jdGlvbiBkZXZpY2VDaGVjaygpIHtcclxuICAgIHZhciBkZXZpY2UgPSB7fTtcclxuICAgIHZhciBtZCA9IG5ldyBNb2JpbGVEZXRlY3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpO1xyXG4gICAgaWYgKG1kLm1hdGNoKC9hbmRyb2lkL2kpKSB7XHJcbiAgICAgICAgZGV2aWNlLm9zID0gXCJhbmRyb2lkXCI7XHJcbiAgICAgICAgZGV2aWNlLnZlcnNpb24gPSBtZC52ZXJzaW9uKFwiYW5kcm9pZFwiKTtcclxuICAgIH0gZWxzZSBpZiAobWQubWF0Y2goLyhpcGhvbmV8aXBhZHxpcG9kKTs/L2kpKSB7XHJcbiAgICAgICAgZGV2aWNlLm9zID0gXCJpb3NcIjtcclxuICAgICAgICBkZXZpY2UudmVyc2lvbiA9IG1kLnZlcnNpb24oXCJpT1NcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRldmljZS5vcyA9IFwicGNcIjtcclxuICAgICAgICBkZXZpY2UudmVyc2lvbiA9IG1kLnZlcnNpb24oXCJDaHJvbWVcIik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGV2aWNlO1xyXG59XHJcblZ1ZS5taXhpbih7XHJcbiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgc3RhdHVzOiBcIlwiLFxyXG4gICAgICAgICAgICBzdGFydF9kYXRlOiBcIjIxMDAvMDgvMDkgMTI6MDk6MTBcIixcclxuICAgICAgICAgICAgZXJyb3JfbXNnOiBcIlwiLFxyXG4gICAgICAgICAgICBtb2RlOiBwcm9kdWN0aW9uID8gXCJTdGFydGVkXCIgOiBcIlRlc3RpbmdcIixcclxuICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXHJcbiAgICAgICAgICAgIHBvcHVwdG9wOiBcIlwiLFxyXG4gICAgICAgICAgICBuYXZIZWlnaHQ6IFwiXCIsXHJcbiAgICAgICAgICAgIHJld2FyZFNoYWtlOiB0cnVlLFxyXG4gICAgICAgICAgICBsaW5lSHJlZjogJycsXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNvbXB1dGVkOiB7XHJcbiAgICAgICAgb3BlbkNvbWU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuICEodGhpcy5tb2RlID09IFwiVGVzdGluZ1wiIHx8IHN0YXJ0X2RhdGUgPD0gMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHdhdGNoOiB7XHJcbiAgICAgICAgZXJyb3JfbXNnOiBmdW5jdGlvbiAodmFsKSB7XHJcbiAgICAgICAgICAgICQoJ2JvZHknKS50b2dnbGVDbGFzcygnX2ZyZWV6ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgZ2FFdmFudDogZnVuY3Rpb24gKGd0bURhdGEpIHtcclxuICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goeydldmVudCc6IGd0bURhdGF9KTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJnYTpcIiwgZ3RtRGF0YSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXJ2ZXJfYnVzeTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgICAgICAgICB2bS5lcnJvcl9tc2cgPSBcIuezu+e1seW/meeijOS4re+8jOiri+eojeW+jOWcqOippiFcIjtcclxuICAgICAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2bS5lcnJvcl9jb3UgPSA2O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2V0Q29va2llOiBmdW5jdGlvbiAoY25hbWUsIGN2YWx1ZSwgdGltZSkge1xyXG4gICAgICAgICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGQuc2V0VGltZShkLmdldFRpbWUoKSArICh0aW1lICogMTAwMCkpO1xyXG4gICAgICAgICAgICB2YXIgZXhwaXJlcyA9IFwiZXhwaXJlcz1cIiArIGQudG9VVENTdHJpbmcoKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY25hbWUgKyBcIj1cIiArIGN2YWx1ZSArIFwiO1wiICsgZXhwaXJlcyArIFwiO1wiO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbG9nZ2VyOiBmdW5jdGlvbiAobGV2ZWwsIGNvbnRlbnQsIHRhZykge1xyXG4gICAgICAgICAgICBpZiAocHJvZHVjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgLy8gbGV2ZWwgOiBbJ0VSUk9SJyA9PiAwLCBERUJVRycgPT4gMSwgJ1dBUk5JTkcnID0+IDIsICdJTkZPJyA9PiAzLCAnQUxMJyA9PiA0XVxyXG4gICAgICAgICAgICAgICAgdmFyIGxldmVsX2luZm8gPSBbJ0VSUk9SJywgJ0RFQlVHJywgJ1dBUk5JTkcnLCAnSU5GTycsICdBTEwnXTtcclxuICAgICAgICAgICAgICAgIF9MVHJhY2tlci5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAnbGV2ZWwnOiBsZXZlbF9pbmZvW2xldmVsXSxcclxuICAgICAgICAgICAgICAgICAgICAnY29udGVudCc6IEpTT04uc3RyaW5naWZ5KGNvbnRlbnQpLFxyXG4gICAgICAgICAgICAgICAgICAgICdwYXRoJzogd2luZG93LmxvY2F0aW9uLmhyZWYsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3RhZyc6IHRhZyB8fCBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgICdkZXZpY2UnOiBkZXZpY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3RpbWVzdGFtcCc6IERhdGUubm93KClcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlcnJvckRvbmU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5lcnJvcl9tc2cgPSBcIlwiO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2hlY2tPbmxpbmU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCFuYXZpZ2F0b3Iub25MaW5lKSB7XHJcbiAgICAgICAgICAgICAgICBhbGVydChcIkludGVybmV0IOmAo+e3muW3suaWt+mWi++8jOiri+eiuuiqjeaCqOeahOe2sui3r+eLgOaFi+OAglwiKTtcclxuICAgICAgICAgICAgICAgIC8vIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc3RhdGVfY2hlY2s6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgcmV0dXJuICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IGAke2ZyaWVuZG9fdXJsfUdldFByb2plY3RJbmZvYCxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRhID0gcmVzLkRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uc3RhcnRfZGF0ZSA9IGRhdGEuU3RhcnREYXRlVGltZTtcclxuICAgICAgICAgICAgICAgICAgICB2bS5tb2RlID0gZGF0YS5TdGF0dXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzY3JvbGxUbzogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgdm0ucm9vbSA9IG51bGw7XHJcbiAgICAgICAgICAgIHZtLmFsbFBvcHVwQ2xvc2UoKTtcclxuICAgICAgICAgICAgJChcImh0bWwsYm9keVwiKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogJChlKS5vZmZzZXQoKS50b3AgLSB2bS5uYXZIZWlnaHRcclxuICAgICAgICAgICAgfSwgNTAwKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBvcHVwT3BlbjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgICAgICAgICBpZiAoIXZtLnBvcHVwdG9wIHx8IHZtLnBvcHVwdG9wID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB2bS5wb3B1cHRvcCA9IE1hdGgubWF4KHdpbmRvdy5wYWdlWU9mZnNldCwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3ApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnX2ZyZWV6ZScpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcG9wdXBDbG9zZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgICAgICAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3MoJ19mcmVlemUnKTtcclxuICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLnNjcm9sbFRvcCh2bS5wb3B1cHRvcCk7XHJcbiAgICAgICAgICAgIHZtLnBvcHVwdG9wID0gMDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFmdGVyRW50ZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgdm0ucG9wdXBPcGVuKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnZXRUb2tlbjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgLy8gdXJsOiBcImh0dHBzOi8vY2FycmVmb3VyMjAxOWNueS5henVyZXdlYnNpdGVzLm5ldC9hcGkvYXV0aC9sb2dpbj9wcm9qZWN0SWQ9NjFcIixcclxuICAgICAgICAgICAgICAgIHVybDogYCR7ZnJpZW5kb191cmx9YXBpL2F1dGgvbG9naW4/cHJvamVjdElkPTYxYCxcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICBcIndlYnRva2VuXCI6IFwiMllSaUlHZXZralpaLVMyMml3d3VTb2FqUmNuWlVTZUVKK2R3c2xUdE0rcz1cIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIlxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIGNvbXBvbmVudHM6IHtcclxuICAgICAgICBjb21pbmdzb29uOiBjb21pbmdzb29uXHJcbiAgICB9LFxyXG4gICAgbW91bnRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgLy8gZml4LWJvZHktc3BhY2VcclxuICAgICAgICB2YXIgbmF2SGVpZ2h0ID0gJCgnLndpbmRvdy10b3AnKS5oZWlnaHQoKTtcclxuICAgICAgICB2bS5uYXZIZWlnaHQgPSBuYXZIZWlnaHQgLSAzMDtcclxuICAgICAgICAkKCdib2R5JykuY3NzKCdtYXJnaW4tdG9wJywgdm0ubmF2SGVpZ2h0KTtcclxuICAgICAgICAkKFwiLm5hdi1sb2NrXCIpLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKFwiX2ZyZWV6ZVwiKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59KVxyXG5cclxuXHJcblZ1ZS5jb21wb25lbnQoJ2NvbWluZ3Nvb24nLCB7XHJcbiAgICB0ZW1wbGF0ZTogXCIjY29taW5nc29vblwiLFxyXG4gICAgcHJvcHM6IFsnU3RhcnREYXRlJywgJ21vZGUnXSxcclxuICAgIGRhdGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjb21pbmdzb29uOiBmYWxzZSxcclxuICAgICAgICAgICAgZGF0ZToge1xyXG4gICAgICAgICAgICAgICAgdG90YWw6IDAsXHJcbiAgICAgICAgICAgICAgICBkYXlzOiAwLFxyXG4gICAgICAgICAgICAgICAgaG91cnM6IDAsXHJcbiAgICAgICAgICAgICAgICBtaW51dGVzOiAwLFxyXG4gICAgICAgICAgICAgICAgc2Vjb25kczogMFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSAgIFxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgcGFkTGVmdCA9IGZ1bmN0aW9uIChzdHIsIGxlbikge1xyXG4gICAgICAgICAgICBzdHIgPSAnJyArIHN0cjtcclxuICAgICAgICAgICAgaWYgKHN0ci5sZW5ndGggPj0gbGVuKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhZExlZnQoXCIwXCIgKyBzdHIsIGxlbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgLy8gdm0uc3RhdGVfY2hlY2soKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAvLyAgICAgdmFyIGRhdGEgPSByZXMuRGF0YTtcclxuICAgICAgICAvLyAgICAgdm0uc3RhcnRfZGF0ZSA9IGRhdGEuU3RhcnREYXRlVGltZTtcclxuICAgICAgICB2YXIgdGltZWludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdCA9IERhdGUucGFyc2UobmV3IERhdGUodm0uU3RhcnREYXRlKSkgLSBEYXRlLnBhcnNlKG5ldyBEYXRlKCkpO1xyXG4gICAgICAgICAgICB2YXIgc2Vjb25kcyA9IE1hdGguZmxvb3IoKHQgLyAxMDAwKSAlIDYwKTtcclxuICAgICAgICAgICAgdmFyIG1pbnV0ZXMgPSBNYXRoLmZsb29yKCh0IC8gMTAwMCAvIDYwKSAlIDYwKTtcclxuICAgICAgICAgICAgdmFyIGhvdXJzID0gTWF0aC5mbG9vcigodCAvICgxMDAwICogNjAgKiA2MCkpICUgMjQpO1xyXG4gICAgICAgICAgICB2YXIgZGF5cyA9IE1hdGguZmxvb3IodCAvICgxMDAwICogNjAgKiA2MCAqIDI0KSk7XHJcbiAgICAgICAgICAgIHZtLmRhdGUgPSB7XHJcbiAgICAgICAgICAgICAgICAndG90YWwnOiB0LFxyXG4gICAgICAgICAgICAgICAgJ2RheXMnOiBwYWRMZWZ0KGRheXMsIDIpLFxyXG4gICAgICAgICAgICAgICAgJ2hvdXJzJzogcGFkTGVmdChob3VycywgMiksXHJcbiAgICAgICAgICAgICAgICAnbWludXRlcyc6IHBhZExlZnQobWludXRlcywgMiksXHJcbiAgICAgICAgICAgICAgICAnc2Vjb25kcyc6IHBhZExlZnQoc2Vjb25kcywgMilcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgaWYgKHZtLmRhdGUudG90YWwgPD0gMCB8fCB2bS5tb2RlID09IFwiVGVzdGluZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRpbWVpbnRlcnZhbCk7XHJcbiAgICAgICAgICAgICAgICB2bS5jb21pbmdzb29uID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2bS5jb21pbmdzb29uID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgfSxcclxufSlcclxuIl19
