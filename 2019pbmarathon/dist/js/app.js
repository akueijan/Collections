"use strict";var _Vue$mixin;function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}var production=!1===$("#appjs").data("mode"),friendo_url=$("#appjs").data("site"),device=deviceCheck();Vue.config.devtools=!production,Vue.config.debug=!production,Vue.config.silent=production;var isPc=768<screen.width,md=new MobileDetect(window.navigator.userAgent),isMobile=null!=md.phone()||null!=md.tablet(),tag=document.createElement("script");function findGetParameter(t){var o=null,n=[];return location.search.substr(1).split("&").forEach(function(e){(n=e.split("="))[0]===t&&(o=decodeURIComponent(n[1]))}),o}function checkCookie(t){var o=null,n=[];return document.cookie.split(";").forEach(function(e){" "==e.charAt(0)&&(e=e.substring(1)),(n=e.split("="))[0]===t&&(o=n[1])}),o}function deviceCheck(){var e={},t=new MobileDetect(window.navigator.userAgent);t.match(/android/i)?(e.os="android",e.version=t.version("android")):t.match(/(iphone|ipad|ipod);?/i)?(e.os="ios",e.version=t.version("iOS")):(e.os="pc",e.version=t.version("Chrome"));var o=t.ua.match(/(line|fb|ig|instagram)/i);return o?(e.browser=o[1].toLowerCase(),"line"==e.browser&&alert("請使用FB APP 或 預設瀏覽器\n開啟本連結，獲得最佳遊戲體驗！")):e.browser="default",e}$(function(){console.log("v1.5.2"),console.log(device)}),Vue.mixin((_defineProperty(_Vue$mixin={data:function(){return{status:"",start_date:"",error_msg:"",mode_status:"",loading:!1,popuptop:"",navHeight:"",rewardShake:!0,lineHref:"",popup:!1,popPage:"",popweek:0,FBmb_id:"",reCaptcha:"",scrollto:0,gToken:"",stateToken:"",top100Arr:[]}},computed:{},watch:{error_msg:function(e){$("body").toggleClass("_freeze")},popup:function(e){1==e?$("body").addClass("_freeze"):$("body").removeClass("_freeze")}},methods:{gaEvant:function(e){dataLayer.push({event:e})},server_busy:function(){var e=this;e.error_msg="系統忙碌中，請稍後在試!",e.loading=!1,e.error_cou=6},setCookie:function(e,t,o){var n=new Date;n.setTime(n.getTime()+1e3*o);var a="expires="+n.toUTCString();document.cookie=e+"="+t+";"+a+";"},logger:function(e,t,o){if(production){_LTracker.push({level:["ERROR","DEBUG","WARNING","INFO","ALL"][e],content:JSON.stringify(t),path:window.location.href,tag:o||null,device:device,timestamp:Date.now()})}},errorDone:function(){this.error_msg=""},checkOnline:function(){navigator.onLine||alert("Internet 連線已斷開，請確認您的網路狀態。")},uptoken:function(e){console.log("asfe"),this.gToken=e},Arrup:function(e){console.log("Arr"),this.top100Arr=e},state_Token:function(){var t=this;return $.ajax({url:"".concat(friendo_url,"auth/login?projectId=66"),headers:{webtoken:"WBqIHc9hTmwyL+g9m0ykfA=="},method:"GET",dataType:"json"}).done(function(e){t.stateToken=e.token})},state_check:function(){var e={mb_id:this.FBmb_id};return $.ajax({url:"".concat(friendo_url,"comebest/getstatus"),headers:{Authorization:"Bearer "+this.stateToken},data:e,method:"POST",dataType:"json"})},getAppstate:function(){var e=this;e.state_Token().then(function(){e.state_check()})},scrollTo:function(e){console.log(321),$("html,body").animate({scrollTop:$(e).offset().top},500)},popClose:function(){this.popup=!1,this.popPage="",this.popweek=0,$("body").removeClass("_freeze"),$("html,body").scrollTop(this.scrollto)},InvoiceToken:function(){var t=this;return $.ajax({url:"".concat(friendo_url,"auth/login"),headers:{WebToken:"WBqIHc9hTmwyL+g9m0ykfA=="},method:"GET",dataType:"json"}).done(function(e){t.invoToken=e.token})},invoiceSave:function(){var e=this,t={cell:e.mobile,inv_num:e.inv_num.toUpperCase(),random_number:e.inv_random,inv_date:e.inv_date,actToken:"nczlaBQUCB4hgiPmF8ro7Q==",captcha:e.reCaptcha};return $.ajax({url:"".concat(friendo_url,"invoice/savedata"),headers:{Authorization:"Bearer "+e.invoToken},data:t,method:"POST",dataType:"json"}).done(function(e){})},backfillSave:function(){var e=this,t={Code:e.userid,name:e.name,address:e.address,IdcardFront:e.IdcardFront,IdcardBack:e.IdcardBack,Bankbook:e.Bankbook,CertificatePhoto:e.CertificatePhoto,captcha:e.reCaptcha};return $.ajax({url:"".concat(friendo_url,"invoice/savedata"),headers:{Authorization:"Bearer "+e.gToken},data:t,method:"POST",dataType:"json"}).done(function(e){console.log("backfill:",e)})},GameToken:function(){var t=this;return $.ajax({url:"".concat(friendo_url,"auth/login?projectId=66"),headers:{webtoken:"WBqIHc9hTmwyL+g9m0ykfA=="},method:"GET",dataType:"json"}).done(function(e){t.gToken=e.token})},deletetest:function(){return $.ajax({url:"".concat(friendo_url,"comebest/deletetest"),headers:{Authorization:"Bearer "+this.gToken},data:{mb_id:"f1b730fd-7f51-4555-923b-a4fa6de0d6c6"},method:"POST",dataType:"json"}).done(function(e){})},register:function(){var t=this;if(window.location.href.match(/(localhost)|(192.168.40)|(192.168.60)/i))e={token:"EAAeDMzq6cTUBAAXuCZAwOfeaj89pZABGGDUgUEyZBB5T1czzAGehstE5urNfOA3Pba7qk2vJ6kjPSWV65RyZBOXjOSTKZBxwzNuuHvmpx7oIeX1M2Ay3uZAzDZBkkw0aZB79kTzfYHl1aMNyN9a4JVz9yRDah9GxidKJZAXqddBiRnS4ZB2qjPQwV1i5ecRtHZAX9gVN0qxXw3G0hvUn6UVYSUm94rYonctBYen8G76GMDoMwZDZD",fb_id:"2592131487464378"};else var e={token:t.fbData.fbtoken,fb_id:t.fbData.fbId};return $.ajax({url:"".concat(friendo_url,"comebest/register"),headers:{Authorization:"Bearer "+t.gToken},data:e,method:"POST",dataType:"json"}).done(function(e){t.fbData.mb_id=e.data,t.getstatus()})},getstatus:function(){var t=this,e={mb_id:t.fbData.mb_id};return $.ajax({url:"".concat(friendo_url,"comebest/getstatus"),headers:{Authorization:"Bearer "+t.gToken},data:e,method:"POST",dataType:"json"}).done(function(e){t.fbData.fbName=e.data.name,t.fbData.fbPic=e.data.pic_url,t.game=new Game({memberData:t.fbData.mb_id})})},fbshare:function(){var e={mb_id:this.fbData.mb_id};return $.ajax({url:"".concat(friendo_url,"comebest/fbshare"),headers:{Authorization:"Bearer "+this.gToken},data:e,method:"POST",dataType:"json"}).done(function(e){})},savephone:function(){var e={mb_id:this.fbData.mb_id,phone:this.mobile};return $.ajax({url:"".concat(friendo_url,"comebest/savephone"),headers:{Authorization:"Bearer "+this.gToken},data:e,method:"POST",dataType:"json"}).done(function(e){})},top100:function(){var t=this,e={mb_id:t.FBmb_id};return $.ajax({url:"".concat(friendo_url,"comebest/top100"),headers:{Authorization:"Bearer "+t.gToken},data:e,method:"POST",dataType:"json"}).done(function(e){t.top100Arr=e.data})},getaward:function(){return $.ajax({url:"".concat(friendo_url,"comebest/LotteryResult/66"),headers:{Authorization:"Bearer "+this.gToken},method:"GET"}).done(function(e){console.log("getaward",e)})},getRecipientinfo:function(){var t=this;return $.ajax({url:"".concat(friendo_url,"comebest/recipientinfo/").concat(t.userid),headers:{Authorization:"Bearer "+t.gToken},method:"GET"}).done(function(e){e.success?(t.mobile=e.data.mobile,t.inv_num=e.data.referenceInfo,t.awarditem=e.data.awardName,t.type=e.data.referenceType):(alert("資料已回填或無法查獲此獎項"),window.location.href="./index.html")})},postRecipientinfo:function(){var e=this,t=new FormData;return t.append("CampaignId",66),t.append("Code",e.userid),t.append("Name",e.name),t.append("Address",e.address),t.append("IdcardFront",e.IdcardFront),t.append("IdcardBack",e.IdcardBack),t.append("Bankbook",e.Bankbook),t.append("Certificate",e.CertificatePhoto),t.append("reCaptcha",e.reCaptcha),t.append("FBId",e.fbData.fbId),$.ajax({url:"".concat(friendo_url,"comebest/recipientinfo"),headers:{Authorization:"Bearer "+e.gToken},data:t,method:"POST",processData:!1,contentType:!1}).done(function(e){})},navfbshare:function(){return window.open("https://www.facebook.com/sharer/sharer.php?u=https://campaign.friendo.com.tw/2019pbmarathon/index.html&hashtag=%23PowerBOMB人生不斷電馬拉松"),!1},navlineshare:function(){var e=encodeURIComponent("https://campaign.friendo.com.tw/2019pbmarathon/index.html?openExternalBrowser=1");window.open("http://line.naver.jp/R/msg/text/?挑戰PowerBOMB人生不斷電馬拉松抽PS4！登錄發票再抽現金99,999、Switch等多項好禮%0D%0A".concat(e),"_blank")},navOpen:function(){$(".nav-btn").click(function(){$(".nav").toggleClass("active"),$("body").toggleClass("_freeze")}),$(".nav-item").click(function(){$(".nav").removeClass("active"),$("body").removeClass("_freeze")})},grecaptcha:function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}(function(o){var n=this;return new Promise(function(t,e){grecaptcha.execute("6LfUo7MUAAAAAJQAML08ruhPeYZvihLYaVvtuYrJ",{action:o}).then(function(e){n.reCaptcha=e,t()},function(){alert("Google驗證失敗，請再次嘗試\n如無法排除此問題，建議重新整理此頁面"),e()})})}),getIe:function(){var t,e;function o(e){return 0<=t.indexOf(e)}"ie"==(t=window.navigator.userAgent,e="ActiveXObject"in window,o("MSIE")||e?"ie":o("Firefox")&&!e?"Firefox":o("Chrome")&&!e?"Chrome":o("Opera")&&!e?"Opera":o("Safari")&&!e?"Safari":void 0)&&alert("目前瀏覽器為舊版 IE，建議使用Chrome瀏覽器，獲得最佳遊戲體驗！")},top100Api:function(){var t=this,e=new XMLHttpRequest;e.onreadystatechange=function(){if(4==this.readyState&&200==this.status){var e=JSON.parse(this.responseText);console.log(e),t.top100Arr=e.data}},e.open("GET","./static/top100.json",!0),e.send()}},components:{comingsoon:comingsoon}},"watch",{}),_defineProperty(_Vue$mixin,"mounted",function(){}),_Vue$mixin)),Vue.component("comingsoon",{template:"#comingsoon",props:["start_date","mode_status"],data:function(){return{comingsoon:!1,comPage:"",start_date:"",mode_status:"",date:{total:0,days:0,hours:0,minutes:0,seconds:0}}},watch:{},mounted:function(){function r(e,t){return(e=""+e).length>=t?e:r("0"+e,t)}var i=this;i.state_Token().then(function(){i.state_check().then(function(e){e.data.game_status,1===e.data.game_status?(i.mode_status="comingsoon",i.start_date=e.data.start_date):i.mode_status="started"})});var c=setInterval(function(){var e=Date.parse(new Date(i.start_date))-Date.parse(new Date),t=Math.floor(e/1e3%60),o=Math.floor(e/1e3/60%60),n=Math.floor(e/36e5%24),a=Math.floor(e/864e5);i.date={total:e,days:r(a,2),hours:r(n,2),minutes:r(o,2),seconds:r(t,2)},"started"==i.mode_status&&(clearInterval(c),i.comingsoon=!1,i.comPage="",$("body").removeClass("_freeze")),"timeover"==i.mode_status&&(i.comingsoon=!0,i.comPage="timeover",$("body").addClass("_freeze")),"comingsoon"==i.mode_status&&(i.comingsoon=!0,i.comPage="comingsoon",$("body").addClass("_freeze"))},1e3)}}),Vue.component("timeover",{template:"#timeover",props:["StartDate","mode_status"],data:function(){return{timeover:!0}},mounted:function(){this.timeover=!0,alert("timeover")}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
