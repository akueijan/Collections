"use strict";var production="false"===$("#appjs").data("mode"),friendo_url=$("#appjs").data("site"),device=deviceCheck();Vue.config.devtools=!production,Vue.config.debug=!production,Vue.config.silent=!production;var md=new MobileDetect(window.navigator.userAgent),tag=document.createElement("script");function findGetParameter(t){var o=null,n=[];return location.search.substr(1).split("&").forEach(function(e){(n=e.split("="))[0]===t&&(o=decodeURIComponent(n[1]))}),o}function checkCookie(t){var o=null,n=[];return document.cookie.split(";").forEach(function(e){" "==e.charAt(0)&&(e=e.substring(1)),(n=e.split("="))[0]===t&&(o=n[1])}),o}function deviceCheck(){var e={},t=new MobileDetect(window.navigator.userAgent);return t.match(/android/i)?(e.os="android",e.version=t.version("android")):t.match(/(iphone|ipad|ipod);?/i)?(e.os="ios",e.version=t.version("iOS")):(e.os="pc",e.version=t.version("Chrome")),e}$(function(){console.log("v1.0"),console.log(device),$(".nav").menu()}),Vue.mixin({data:function(){return{status:"",start_date:"2100/08/09 12:09:10",error_msg:"",mode:production?"Started":"Testing",loading:!1,popuptop:"",navHeight:"",rewardShake:!0,lineHref:"",token:"",popup:"",popupPage:"",popupTxt:"",reCaptcha:""}},computed:{openCome:function(){return!("Testing"==this.mode||start_date<=0)}},watch:{error_msg:function(e){$("body").toggleClass("_freeze")}},methods:{gaEvant:function(e){dataLayer.push({event:e}),console.log("ga:",e)},server_busy:function(){var e=this;e.error_msg="系統忙碌中，請稍後在試!",e.loading=!1,e.error_cou=6},setCookie:function(e,t,o){var n=new Date;n.setTime(n.getTime()+1e3*o);var a="expires="+n.toUTCString();document.cookie=e+"="+t+";"+a+";"},logger:function(e,t,o){if(production){_LTracker.push({level:["ERROR","DEBUG","WARNING","INFO","ALL"][e],content:JSON.stringify(t),path:window.location.href,tag:o||null,device:device,timestamp:Date.now()})}},errorDone:function(){this.error_msg=""},checkOnline:function(){navigator.onLine||alert("Internet 連線已斷開，請確認您的網路狀態。")},state_check:function(){var o=this;return $.ajax({method:"GET",url:friendo_url+"GetProjectInfo",success:function(e){var t=e.Data;o.start_date=t.StartDateTime,o.mode=t.Status}})},scrollTo:function(e){var t=this;t.room=null,t.allPopupClose(),$("html,body").animate({scrollTop:$(e).offset().top-t.navHeight},500)},popupOpen:function(){var e=this;e.popuptop&&0!==e.popuptop||(e.popuptop=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop)),$("body").addClass("_freeze")},popupClose:function(){var e=this;$("body").removeClass("_freeze"),$("html, body").scrollTop(e.popuptop),e.popup="",e.popupPage="",e.popupTxt=""},afterEnter:function(){this.popupOpen()},getToken:function(){var t=this;return $.ajax({url:friendo_url+"/Login/Get?projectId=1",headers:{WebToken:"EYtbcRAm5qSpjpnFJujGAQ=="},method:"GET",dataType:"json"}).done(function(e){console.log(e),t.token=e.Data})},postFace:function(){var e=this,t={Image:e.facebase64.replace(/^data:.*?;base64,/,""),Captcha:e.reCaptcha};return $.ajax({url:friendo_url+"/Sentra201904/FaceDetect",headers:{Authorization:e.token},data:t,method:"POST",dataType:"json"}).done(function(e){console.log(e),console.log(e.Data.Face.FaceLandmarks)})},getResult:function(){var e={ID:this.faceId};return $.ajax({url:friendo_url+"/sentra201904/GetDetectResult",headers:{Authorization:this.token},data:e,method:"POST",dataType:"json"}).done(function(e){console.log(e)})},fbImgpost:function(){var e={ID:this.faceId,Image:this.fbImg.replace(/^data:.*?;base64,/,"")};return $.ajax({url:friendo_url+"/sentra201904/SaveShare",headers:{Authorization:this.token},data:e,method:"POST",dataType:"json"}).done(function(e){console.log(e)})},perInfopost:function(){var e=this,t={ID:e.faceId,Name:e.perinfo.name,Phone:e.perinfo.mobile,Address:e.perinfo.address};return $.ajax({url:friendo_url+"/sentra201904/SaveLottery",headers:{Authorization:e.token},data:t,method:"POST",dataType:"json"}).done(function(e){console.log(e)})},sendImg:function(){var t=this;if(!t.picAgree)return t.popup="open",t.popupPage="alert",void(t.popupTxt="agree");t.getToken().then(function(){t.postFace().then(function(e){t.faceId=e.Data.ID,t.faceEye=e.Data.Eye,t.faceLip=e.Data.Lip,t.faceNose=e.Data.Nose,t.faceScore=e.Data.Score,t.faceData=e.Data.Face,t.stepPage="step2",t.loadcanvas(),t.scanstep(),t.cutImg(),t.cutImg2()})})},sendId:function(){var t=this;t.getToken().then(function(){t.getResult().then(function(e){t.faceEye=e.Data.Eye,t.faceLip=e.Data.Lip,t.faceNose=e.Data.Nose,t.faceScore=parseFloat(Math.round(100*e.Data.Score)/100).toFixed(1),t.faceUrl=e.Data.FaceUrl,t.setfbBg(),t.setans(),$(".starbg img").css("transform","translateX("+(20*t.faceScore-100)+"%)")})})},sendFbshare:function(){var t=this;t.getToken().then(function(){t.fbImgpost().then(function(e){t.fbshare(),t.stepPage="perform",t.popupClose()})})},sendperInfo:function(){var t=this;""!=t.perinfo.name?""!=t.perinfo.mobile&&t.perinfo.mobile.match(/^09[0-9]{8}$/)?""!=t.perinfo.address?t.perinfo.agree?t.getToken().then(function(){t.perInfopost().then(function(e){e.Data&&(t.popup="open",t.popupPage="alert",t.popupTxt="success",setTimeout(function(){window.open("product.html","_self")},1e3))})}):alert("請勾選同意"):alert("請輸入地址"):alert("手機格式錯誤"):alert("請輸入姓名")},sharebox:function(){this.fbcanvas(),this.popup="open",this.popupPage="alert",this.popupTxt="share"},eventnoteOpen:function(){this.popup="open",this.popupPage="note"},grecaptcha:function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}(function(e){var t=this;grecaptcha.ready(function(){grecaptcha.execute("6LcRbZ4UAAAAAPogVKoUTG5Zc16lL5tWP3Jjl8Tj",{action:e}).then(function(e){t.reCaptcha=e})})})},components:{comingsoon:comingsoon},mounted:function(){$(".nav-lock").click(function(){$("body").removeClass("_freeze")})}}),Vue.component("comingsoon",{template:"#comingsoon",props:["StartDate","mode"],data:function(){return{comingsoon:!1,date:{total:0,days:0,hours:0,minutes:0,seconds:0}}},mounted:function(){var r=function e(t,o){return(t=""+t).length>=o?t:e("0"+t,o)},i=this,c=setInterval(function(){var e=Date.parse(new Date(i.StartDate))-Date.parse(new Date),t=Math.floor(e/1e3%60),o=Math.floor(e/1e3/60%60),n=Math.floor(e/36e5%24),a=Math.floor(e/864e5);i.date={total:e,days:r(a,2),hours:r(n,2),minutes:r(o,2),seconds:r(t,2)},i.date.total<=0||"Testing"==i.mode?(clearInterval(c),i.comingsoon=!1):i.comingsoon=!0},1e3)}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
