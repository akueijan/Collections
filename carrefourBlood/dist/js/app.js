"use strict";!function(t){t.fn.menu=function(o){t.extend({},{opt1:null},o);function e(){t("html,body").toggleClass("_freeze"),t(".l-main").toggleClass("l-main--active")}return this.each(function(){!function(o){var n=t(o),a=n.find(".nav-btn"),i=n.find(".nav-menu a");a.click(function(){n.toggleClass("nav--active"),e()}),i.click(function(){n.toggleClass("nav--active"),e()}),t(".btn__note").click(function(){t("html,body").addClass("_freeze")}),t(".note__close").click(function(){t("html,body").removeClass("_freeze")})}(t(this))}),this},t(function(){t("#nav").menu()})}(jQuery);var fbhtml_url="http://www.yahoo.com.tw",app=new Vue({el:"#app",data:{popup:!1,note:!1},props:{},watch:{},computed:{},methods:{sakura:function(){var t=new e(16,6);setInterval(t.addIcon,400);var o=new e(32,4);setInterval(o.addIcon,800);function e(t,o){this.addIcon=function(){n[Math.floor(Math.random()*n.length)];var t=Math.floor(600*Math.random()+1),a=$("<div class=hana></div>").appendTo("#sakura");TweenLite.to(a,0,{x:t,color:"#2222ff",y:-80}),TweenLite.to(a,o,{color:"#ff00ff",y:800,x:t+400*Math.random(),opacity:0,ease:Linear.easeNone,onComplete:e,onCompleteParams:["{self}"]});var i=Math.random()+10;TweenMax.to(a,i,{rotation:390,ease:Linear.easeNone,repeat:-1})};var e=function(t){t.target.remove(),t.remove},n=[]}},startAni:function(){new TimelineMax({repeatDelay:0,onStart:function(){TweenMax.set($("#ripple"),{opacity:1})},onComplete:function(){}}).to(".kv__item",.3*3,{opacity:1}).to(".kv__hand--1",.3*3,{y:-281}).to(".kv__hand--2",.3/8,{opacity:1}).to(".kv__hand--1",.3/8,{opacity:0}).to(".kv__hand--3",.3/8,{opacity:1}).to(".kv__hand--2",.3/8,{opacity:0}).to(".kv__hand--4",.3/8,{opacity:1}).to(".kv__hand--3",.3/8,{opacity:0}).to(".kv__hand--5",.3/8,{opacity:1}).to(".kv__hand--4",.3/8,{opacity:0}).to(".kv__hand--6",.3/8,{opacity:1}).to(".kv__hand--5",.3/8,{opacity:0}).to(".kv__hand--7",.3/8,{opacity:1}).to(".kv__hand--6",.3/8,{opacity:0}).to(".kv__hand--8",.3/8,{opacity:1}).to(".kv__hand--7",.3/8,{opacity:0}).to(".kv__blood",.3*6,{opacity:.8,scale:1,transformOrigin:"center center"}).to(".kv__hand--8",.3*3,{opacity:0,display:"none"},"-=0.9").to(".kv__blood",.3,{css:{zIndex:1}})},fixAni:function(){$(window).scroll(function(){var t=$("body").scrollTop()>0?$("body").scrollTop():$("html, body").scrollTop(),o=new TimelineMax;t>$(".step__hd").offset().top-200&&t<$(".step__ft").offset().top+100?o.to(".step__other",.3*3,{right:0}):o.to(".step__other",.3,{right:-$(".step__other").width()})})},fixSakura:function(){$(window).scroll(function(){var t=$("body").scrollTop()>0?$("body").scrollTop():$("html, body").scrollTop(),o=new TimelineMax;t>$(".step__hd").offset().top-200&&t<$(".step__ft").offset().top+100?o.to("#sakura",.3*3,{opacity:1}):o.to("#sakura",.3,{opacity:0})})},noteOpen:function(){this.note=!0},noteClose:function(){this.note=!1},fbShare:function(){window.open("http://www.facebook.com/sharer/sharer.php?u="+fbhtml_url)}},created:function(){},mounted:function(){console.log("app mounted");var t=this;$("#ripple").length>0&&new WaterRippleEffect(document.getElementById("ripple"),{image:"./images/rippie.png",rippleRadius:50,width:350,height:350,delay:300,auto:!0}),setTimeout(function(){t.startAni()},300),$(".kv__more").click(function(){$("html,body").animate({scrollTop:$(".step__title--title1").offset().top-50},1e3)}),$("#sakura").length>0&&t.sakura(),t.fixAni(),t.fixSakura()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
